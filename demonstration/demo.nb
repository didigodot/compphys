(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    143790,       3538]
NotebookOptionsPosition[    139080,       3393]
NotebookOutlinePosition[    140704,       3444]
CellTagsIndexPosition[    140368,       3432]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pitch-Class Set Orders and Forms", "DemoTitle",
 CellChangeTimes->{{3.597969536725177*^9, 3.597969543329103*^9}, {
   3.597969604830543*^9, 3.5979696060048532`*^9}, 3.597970193703745*^9, {
   3.597970363339325*^9, 3.597970364536953*^9}, {3.5979709715107403`*^9, 
   3.597970973627872*^9}}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GenerateSet", "[", 
   RowBox[{"notelen_", ",", "sl_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"row", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "sl"}], "]"}], ",", "sl"}], "]"}]}], "}"}], ",", 
    RowBox[{"Sound", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SoundNote", "[", 
        RowBox[{
         RowBox[{"row", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "notelen"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "row", "]"}]}], "}"}]}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlaySet", "[", 
   RowBox[{"row_", ",", "notelen_"}], "]"}], ":=", 
  RowBox[{"Sound", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SoundNote", "[", 
      RowBox[{
       RowBox[{"row", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "notelen"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "row", "]"}]}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlaySetChord", "[", 
   RowBox[{"row_", ",", "notelen_"}], "]"}], ":=", 
  RowBox[{"Sound", "[", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SoundNote", "[", 
        RowBox[{
         RowBox[{"row", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"notelen", "/", "3"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "row", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"SoundNote", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"row", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "row", "]"}]}], "}"}]}], "]"}], ",", 
       "notelen"}], "]"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ButtonLabel", "[", 
   RowBox[{"ps_", ",", " ", 
    RowBox[{"1.2", "_"}]}], "]"}], ":=", 
  RowBox[{"ImageCrop", "[", 
   RowBox[{
    RowBox[{"Rasterize", "[", 
     RowBox[{
      RowBox[{"PlaySet", "[", 
       RowBox[{"ps", ",", " ", "1.2"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"200", ",", "40"}], "}"}], ",", "Bottom"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"poss", "[", 
   RowBox[{"i_", ",", "tup_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], ">", "6"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], "<", "12"}]}], ",", 
    
    RowBox[{"Mod", "[", 
     RowBox[{"12", ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"tup", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{"tup", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], "\[NotEqual]", 
       "0"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICSet", "[", "ps_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"poss", "[", 
         RowBox[{"i", ",", 
          RowBox[{"Subsets", "[", 
           RowBox[{"ps", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Subsets", "[", 
            RowBox[{"ps", ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
      "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Invert", "[", "ps_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"12", "-", 
      RowBox[{"ps", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "ps", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cperm", "[", "set_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"st", "=", 
      RowBox[{"Sort", "[", "set", "]"}]}], "}"}], ",", 
    RowBox[{"Delete", "[", 
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"st", ",", 
        RowBox[{"st", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ordered", "[", "cp_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[NotEqual]", "1"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"cp", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<", 
         RowBox[{"cp", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"cp", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "+", "12"}], ",", 
        RowBox[{"cp", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"cp", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "cp", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeCPerm", "[", "pc_", "]"}], ":=", 
  RowBox[{"ordered", "[", 
   RowBox[{"cperm", "[", "pc", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cperms", "[", "s_", "]"}], ":=", 
  RowBox[{"NestList", "[", 
   RowBox[{"makeCPerm", ",", "s", ",", 
    RowBox[{
     RowBox[{"Length", "[", "s", "]"}], "-", "1"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cut", "[", "s_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"z", "=", 
      RowBox[{"TakeWhile", "[", 
       RowBox[{"s", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
          RowBox[{"s", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalOrder", "[", 
   RowBox[{"s_", ",", " ", "k_"}], "]"}], ":=", 
  RowBox[{"cut", "[", 
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"s", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "k"}]}], "]"}], 
           "]"}], "-", 
          RowBox[{"s", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "<", 
       RowBox[{"#2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnOrder", "[", 
   RowBox[{"s_", ",", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Fold", "[", 
    RowBox[{"normalOrder", ",", 
     RowBox[{"cperms", "[", 
      RowBox[{"Sort", "[", "s", "]"}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "l"}], "]"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"primeForm", "[", "s_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", "=", 
      RowBox[{"fnOrder", "[", 
       RowBox[{"s", ",", " ", 
        RowBox[{"Length", "[", "s", "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"transpose", "[", 
     RowBox[{"t", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "*", 
       RowBox[{"t", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transpose", "[", 
   RowBox[{"s_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "+", "n"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverse", "[", "s_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"12", "-", 
       RowBox[{"s", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "12"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ForteNumber", "[", "s_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "s", "]"}], "<", "10"}], " ", "&&", 
     RowBox[{
      RowBox[{"Length", "[", "s", "]"}], ">", "2"}]}], ",", 
    RowBox[{"fortenums", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"fortenums", ",", "s"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], "]"}], 
    ",", "\"\<N/A\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findn", "[", "PCSet_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"Tally", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"PCSet", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "+", 
                 RowBox[{"PCSet", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", "12"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], "]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"_", ",", 
          RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], "]"}], 
     "\[Equal]", "0"}], ",", 
    RowBox[{"-", "1"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"PCSet", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{"PCSet", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", "12"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], "]"}], 
      "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Tally", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"PCSet", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "+", 
                   RowBox[{"PCSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "12"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"_", ",", 
            RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tni", "[", 
   RowBox[{"s_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"transpose", "[", 
   RowBox[{
    RowBox[{"inverse", "[", "s", "]"}], ",", "n"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mod12", "[", "s_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ">", "11"}], ",", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ",", 
      RowBox[{"s", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.598178205035637*^9, 3.5981782698478193`*^9}, {
   3.598183336142531*^9, 3.598183336499876*^9}, {3.598295807907403*^9, 
   3.5982958081728573`*^9}, {3.598402882604241*^9, 3.5984028829306803`*^9}, {
   3.598404396900464*^9, 3.598404401356379*^9}, 3.598404439909602*^9, {
   3.598405774947011*^9, 3.598405781979229*^9}, {3.598407299576992*^9, 
   3.598407299705594*^9}, 3.598408004770672*^9, {3.5984084615512*^9, 
   3.5984084837762938`*^9}, {3.598408639263866*^9, 3.59840880102588*^9}, {
   3.598409922931931*^9, 3.5984099268042*^9}, {3.598410187702552*^9, 
   3.598410192645369*^9}, {3.59841050396985*^9, 3.598410531448045*^9}},
 CellID->91615473]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fortenums", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "7", ",", "2"}], "}"}], ",", "\"\<3-5\>\""}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "4", ",", "8"}], "}"}], ",", 
         "\"\<4-19\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "4", ",", "7", ",", "10"}], "}"}], ",", 
         "\"\<4-18\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
         "\"\<5-7\>\""}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "4", ",", "6", ",", "8", ",", "10", ",", "0"}], 
          "}"}], ",", "\"\<6-34\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7", ",", "8", ",", "10", ",", "0", ",", "1", ",", "3", ",", "5"}], 
          "}"}], ",", "\"\<7-35\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
           ",", "7"}], "}"}], ",", "\"\<8-1\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "7", 
           ",", "9", ",", "10"}], "}"}], ",", "\"\<9-11\>\""}], "}"}]}], 
      "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Matrix", "\[Equal]", "False"}], ",", 
      RowBox[{"Row", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<Forte Number: \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"ForteNumber", "[", "PCSet", "]"}], "]"}]}], "]"}], 
              ",", "16"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<Cardinal Number: \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "[", "PCSet", "]"}], "]"}]}], "]"}], ",", 
              "16"}], "]"}], ",", "\[IndentingNewLine]", "\t", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<Interval Vector: \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"ICSet", "[", "PCSet", "]"}], "]"}]}], "]"}], ",", 
              "16"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Spacer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Panel", "[", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", "\"\<Original set\>\"", "]"}], ",", 
                 "14"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{"ToString", "[", "PCSet", "]"}], "]"}], ",", "12"}],
                 "]"}], ",", 
               RowBox[{"PlaySetChord", "[", 
                RowBox[{"PCSet", ",", "1.2"}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{"\"\<Transpose at level \>\"", "<>", 
                   RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", "14"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"transpose", "[", 
                    RowBox[{"PCSet", ",", "n"}], "]"}], "]"}], "]"}], ",", 
                 "12"}], "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"ButtonLabel", "[", 
                  RowBox[{
                   RowBox[{"transpose", "[", 
                    RowBox[{"PCSet", ",", "n"}], "]"}], ",", "1.2"}], "]"}], 
                 ",", " ", 
                 RowBox[{"EmitSound", "[", 
                  RowBox[{"Sound", "@", 
                   RowBox[{"PlaySet", "[", 
                    RowBox[{
                    RowBox[{"transpose", "[", 
                    RowBox[{"PCSet", ",", "n"}], "]"}], ",", " ", 
                    RowBox[{"1.2", "/", "3"}]}], "]"}]}], "]"}]}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", "\"\<Normal form\>\"", "]"}], ",", 
                 "14"}], "]"}], ",", " ", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"fnOrder", "[", 
                    RowBox[{"PCSet", ",", 
                    RowBox[{"Length", "[", "PCSet", "]"}]}], "]"}], "]"}], 
                  "]"}], ",", "12"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"ButtonLabel", "[", 
                  RowBox[{
                   RowBox[{"fnOrder", "[", 
                    RowBox[{"PCSet", ",", 
                    RowBox[{"Length", "[", "PCSet", "]"}]}], "]"}], ",", 
                   "1.2"}], "]"}], ",", " ", 
                 RowBox[{"EmitSound", "[", 
                  RowBox[{"Sound", "@", 
                   RowBox[{"PlaySet", "[", 
                    RowBox[{
                    RowBox[{"fnOrder", "[", 
                    RowBox[{"PCSet", ",", 
                    RowBox[{"Length", "[", "PCSet", "]"}]}], "]"}], ",", " ", 
                    
                    RowBox[{"1.2", "/", "3"}]}], "]"}]}], "]"}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", "\"\<Prime form\>\"", "]"}], ",", 
                 "14"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"primeForm", "[", 
                    RowBox[{"Sort", "[", "PCSet", "]"}], "]"}], "]"}], "]"}], 
                 ",", "12"}], "]"}], ",", 
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"ButtonLabel", "[", 
                  RowBox[{
                   RowBox[{"primeForm", "[", 
                    RowBox[{"Sort", "[", "PCSet", "]"}], "]"}], ",", "1.2"}], 
                  "]"}], ",", " ", 
                 RowBox[{"EmitSound", "[", 
                  RowBox[{"Sound", "@", 
                   RowBox[{"PlaySet", "[", 
                    RowBox[{
                    RowBox[{"primeForm", "[", 
                    RowBox[{"Sort", "[", "PCSet", "]"}], "]"}], ",", " ", 
                    RowBox[{"1.2", "/", "3"}]}], "]"}]}], "]"}]}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", "\"\<Inversion\>\"", "]"}], ",", "14"}],
                 "]"}], ",", " ", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"Invert", "[", "PCSet", "]"}], "]"}], "]"}], ",", 
                 "12"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"ButtonLabel", "[", 
                  RowBox[{
                   RowBox[{"Invert", "[", "PCSet", "]"}], ",", "1.2"}], "]"}],
                  ",", " ", 
                 RowBox[{"EmitSound", "[", 
                  RowBox[{"Sound", "@", 
                   RowBox[{"PlaySet", "[", 
                    RowBox[{
                    RowBox[{"Invert", "[", "PCSet", "]"}], ",", " ", 
                    RowBox[{"1.2", "/", "3"}]}], "]"}]}], "]"}]}], "]"}]}], 
              "}"}]}], "}"}], "\[IndentingNewLine]", "]"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"findn", "[", "PCSet", "]"}], "\[Equal]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Text", "[", "\"\<Not Combinatorial\>\"", "]"}], ",", 
             "16", ",", " ", "Red"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{"\"\<Combinatorial: \\n T(\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"findn", "[", "PCSet", "]"}], "]"}], "<>", 
               "\"\<)I = \>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"mod12", "[", 
                 RowBox[{"tni", "[", 
                  RowBox[{"PCSet", ",", 
                   RowBox[{"findn", "[", "PCSet", "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}], ",", "16", ",", " ", "Blue"}], "]"}]}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Text", "@", 
            RowBox[{"Grid", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"j", "\[Equal]", "0"}], ",", 
                  RowBox[{"Prepend", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"PCSet", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", 
                    RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], 
                    ",", "\"\< \>\""}], "]"}], ",", 
                  RowBox[{"Prepend", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PCSet", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "+", 
                    RowBox[{"PCSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "12"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"PCSet", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "0", ",", 
                  RowBox[{"Length", "[", "PCSet", "]"}]}], "}"}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Dividers", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", "\[Rule]", 
                   RowBox[{"Thickness", "[", "2", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", "\[Rule]", 
                   RowBox[{"Thickness", "[", "2", "]"}]}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ",", "18"}], 
          "]"}]}], "}"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PCSet", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "4", ",", "8"}], "}"}], ",", 
       "\"\<Set class\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "0", "}"}], "\[Rule]", "\"\<{0}\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "0"}], "}"}], "\[Rule]", "\"\<{0, 4}\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "7", ",", "2"}], "}"}], "\[Rule]", 
        "\"\<Berg - Altenberg Lieder Op.4/3\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "4", ",", "8"}], "}"}], "\[Rule]", 
        "\"\<Berg - Wozzeck\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "7", ",", "10"}], "}"}], "\[Rule]", 
        "\"\<Schoenberg - George Lieder Op.15/6\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "7", ",", "8", ",", "9"}], "}"}], 
        "\[Rule]", 
        "\"\<Webern - Five Movements for String Quartet Op.5/5\>\""}], ",", 
       " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "6", ",", "8", ",", "10", ",", "0"}], 
         "}"}], "\[Rule]", "\"\<Scriabin - Seventh Piano Sonata Op. 64\>\""}],
        ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "7", ",", "8", ",", "10", ",", "0", ",", "1", ",", "3", ",", "5"}], 
         "}"}], "\[Rule]", "\"\<Busoni - Second Sonatina\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",",
           "7"}], "}"}], "\[Rule]", 
        "\"\<Schoenberg - Six Short Piano Pieces Op. 19/6\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "7", ",",
           "9", ",", "10"}], "}"}], "\[Rule]", 
        "\"\<Stravinsky - Rite of Spring\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "8", ",", "1", ",", "11", ",", "0", ",", "7", ",", "3", ",", "2", 
          ",", "6", ",", "10", ",", "5"}], "}"}], "\[Rule]", 
        "\"\<{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "10", ",", "11", ",", "5", ",", "0", ",", "8", ",", "2", ",", "1", 
          ",", "6", ",", "4", ",", "7", ",", "3"}], "}"}], "->", 
        "\"\<{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "11", ",", "6", ",", "10", ",", "0", ",", "1", ",", "3", ",", "7", 
          ",", "2", ",", "9", ",", "4", ",", "8", ",", "5"}], "}"}], "->", 
        "\"\<{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}\>\""}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "\"\<Transpose level\>\""}], "}"}], ",", 
     "0", ",", "8", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Matrix", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
   RowBox[{"ContentSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"610", ",", "400"}], "}"}]}], ",", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598183338491458*^9, 3.598183338710281*^9}, {
   3.598290411354031*^9, 3.598290437446844*^9}, {3.5982904736571083`*^9, 
   3.598290712924857*^9}, {3.5982949472983*^9, 3.5982949498076572`*^9}, {
   3.598295806094606*^9, 3.598295806492506*^9}, {3.5983995237841682`*^9, 
   3.598399576342682*^9}, {3.5983996323294287`*^9, 3.59839963283801*^9}, {
   3.5983996754661837`*^9, 3.598399677696988*^9}, {3.598399736666555*^9, 
   3.59839981878609*^9}, {3.5983999526934347`*^9, 3.5983999531691027`*^9}, {
   3.5984003552894173`*^9, 3.598400363032395*^9}, {3.598402424119567*^9, 
   3.598402461222145*^9}, {3.598402537775817*^9, 3.598402538161331*^9}, {
   3.598402884678319*^9, 3.598402884916717*^9}, {3.598403426955668*^9, 
   3.598403439847383*^9}, {3.598404169578528*^9, 3.598404172581991*^9}, 
   3.59840422157201*^9, {3.598404258879279*^9, 3.5984043094069242`*^9}, 
   3.598404450986994*^9, {3.598404586482424*^9, 3.598404674755941*^9}, {
   3.598404986421741*^9, 3.598405072437728*^9}, {3.598405164435557*^9, 
   3.59840525364946*^9}, {3.5984053104724503`*^9, 3.598405313099288*^9}, {
   3.598405618748307*^9, 3.598405624264249*^9}, {3.5984060003477077`*^9, 
   3.59840600117137*^9}, {3.598406040435033*^9, 3.598406121534073*^9}, {
   3.598406247670003*^9, 3.5984062942533417`*^9}, {3.598406342494129*^9, 
   3.598406476996265*^9}, {3.5984065275016747`*^9, 3.5984065602676773`*^9}, {
   3.598408016391613*^9, 3.598408101275529*^9}, {3.598408137453205*^9, 
   3.598408146651824*^9}, {3.598408191492422*^9, 3.598408380171351*^9}, {
   3.598408421902212*^9, 3.598408445639378*^9}, {3.598408522042955*^9, 
   3.598408541722743*^9}, 3.598408586704818*^9, {3.598408820036193*^9, 
   3.598408825844778*^9}, {3.5984089086522818`*^9, 3.598408927073742*^9}, {
   3.5984089786793737`*^9, 3.5984089987425537`*^9}, {3.5984099450773153`*^9, 
   3.5984099476790857`*^9}, {3.598410076901033*^9, 3.598410095917766*^9}, {
   3.598410329452677*^9, 3.598410333276083*^9}, {3.5984103747758083`*^9, 
   3.5984103797111187`*^9}, {3.598410448245842*^9, 3.598410503442676*^9}},
 CellID->1670053378],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Matrix$$ = False, $CellContext`n$$ = 
    0, $CellContext`PCSet$$ = {0, 1, 4, 8}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`PCSet$$], {0, 1, 4, 8}, "Set class"}, {{0} -> 
       "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
       "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
       "Berg - Wozzeck", {3, 4, 7, 10} -> 
       "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
       "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 10, 
        0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 1, 3, 
        5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
       "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 7, 
        9, 10} -> "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10,
         5} -> "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 
        4, 7, 3} -> 
       "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 7, 2, 9, 4,
         8, 5} -> "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{
       Hold[$CellContext`n$$], 0, "Transpose level"}, 0, 8, 1}, {{
       Hold[$CellContext`Matrix$$], False}, {True, False}}}, 
    Typeset`size$$ = {465.701171875, {320., 31.65625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`PCSet$235750$$ = False, $CellContext`n$235751$$ = 
    0, $CellContext`Matrix$235752$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Matrix$$ = False, $CellContext`n$$ = 
        0, $CellContext`PCSet$$ = {0, 1, 4, 8}}, "ControllerVariables" :> {
        Hold[$CellContext`PCSet$$, $CellContext`PCSet$235750$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$235751$$, 0], 
        Hold[$CellContext`Matrix$$, $CellContext`Matrix$235752$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4, 8}, 
           "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{3, 4,
            6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 1, 
           2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, "9-11"}}; 
       If[$CellContext`Matrix$$ == False, 
         Row[{
           Column[{
             Style[
              Text[
               StringJoin["Forte Number: ", 
                ToString[
                 $CellContext`ForteNumber[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Cardinal Number: ", 
                ToString[
                 Length[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Interval Vector: ", 
                ToString[
                 $CellContext`ICSet[$CellContext`PCSet$$]]]], 16]}], 
           Spacer[10], 
           Panel[
            Grid[{{
               Style[
                Text["Original set"], 14], 
               Style[
                Text[
                 ToString[$CellContext`PCSet$$]], 12], 
               $CellContext`PlaySetChord[$CellContext`PCSet$$, 1.2]}, {
               Style[
                Text[
                 StringJoin["Transpose at level ", 
                  ToString[$CellContext`n$$]]], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2/3]]]]}, {
               Style[
                Text["Normal form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`fnOrder[$CellContext`PCSet$$, 
                   Length[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`fnOrder[$CellContext`PCSet$$, 
                  Length[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`fnOrder[$CellContext`PCSet$$, 
                    Length[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Prime form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`primeForm[
                   Sort[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`primeForm[
                  Sort[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`primeForm[
                    Sort[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Inversion"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`Invert[$CellContext`PCSet$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`Invert[$CellContext`PCSet$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`Invert[$CellContext`PCSet$$], 1.2/3]]]]}}]]}], 
         Column[{
           If[$CellContext`findn[$CellContext`PCSet$$] == -1, 
            Style[
             Text["Not Combinatorial"], 16, Red], 
            Style[
             Text[
              StringJoin["Combinatorial: \n T(", 
               ToString[
                $CellContext`findn[$CellContext`PCSet$$]], ")I = ", 
               ToString[
                $CellContext`mod12[
                 $CellContext`tni[$CellContext`PCSet$$, 
                  $CellContext`findn[$CellContext`PCSet$$]]]]]], 16, Blue]], 
           Style[
            Text[
             Grid[
              Table[
               If[$CellContext`j == 0, 
                Prepend[
                 Table[
                  
                  Part[$CellContext`PCSet$$, $CellContext`k], {$CellContext`k,
                    1, 
                   Length[$CellContext`PCSet$$]}], " "], 
                Prepend[
                 Table[
                  Mod[
                  Part[$CellContext`PCSet$$, $CellContext`j] + 
                   Part[$CellContext`PCSet$$, $CellContext`i], 
                   12], {$CellContext`i, 1, 
                   Length[$CellContext`PCSet$$]}], 
                 
                 Part[$CellContext`PCSet$$, $CellContext`j]]], \
{$CellContext`j, 0, 
                Length[$CellContext`PCSet$$]}], 
              Dividers -> {{2 -> Thickness[2]}, {2 -> Thickness[2]}}, Frame -> 
              All]], 18]}]]), 
      "Specifications" :> {{{$CellContext`PCSet$$, {0, 1, 4, 8}, 
          "Set class"}, {{0} -> "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
          "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
          "Berg - Wozzeck", {3, 4, 7, 10} -> 
          "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
          "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 
           10, 0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 
           1, 3, 5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
          "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 
           7, 9, 10} -> 
          "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10, 5} -> 
          "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 4, 7,
            3} -> "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 
           7, 2, 9, 4, 8, 5} -> 
          "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{$CellContext`n$$, 0, 
          "Transpose level"}, 0, 8, 1}, {{$CellContext`Matrix$$, False}, {
         True, False}}}, 
      "Options" :> {
       ContinuousAction -> False, ContentSize -> {610, 400}, Alignment -> 
        Center}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{624., {255., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4,
           8}, "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{
          3, 4, 6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 
          1, 2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, 
          "9-11"}}, $CellContext`ForteNumber[
         Pattern[$CellContext`s, 
          Blank[]]] := If[
         And[Length[$CellContext`s] < 10, Length[$CellContext`s] > 2], 
         Part[$CellContext`fortenums, 
          Part[
           Position[$CellContext`fortenums, $CellContext`s], 1, 1], 2], 
         "N/A"], $CellContext`ICSet[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Count[
          Table[
           $CellContext`poss[$CellContext`i, 
            Subsets[$CellContext`ps, {2}]], {$CellContext`i, 1, 
            Length[
             
             Subsets[$CellContext`ps, {
              2}]]}], $CellContext`j], {$CellContext`j, 1, 
          6}], $CellContext`poss[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`tup, 
          Blank[]]] := If[
         And[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] > 6, 
          Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] < 12], 
         Mod[12, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 1]]], 
         If[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] != 0, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 
            1]]]], $CellContext`PlaySetChord[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Append[
          Table[
           SoundNote[
            Part[$CellContext`row, $CellContext`i], $CellContext`notelen/
            3], {$CellContext`i, 1, 
            Length[$CellContext`row]}], 
          SoundNote[
           Table[
            Part[$CellContext`row, $CellContext`i], {$CellContext`i, 1, 
             
             Length[$CellContext`row]}], $CellContext`notelen]]], \
$CellContext`transpose[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Table[Part[$CellContext`s, $CellContext`i] + $CellContext`n, \
{$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 1.2 Blank[]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, 1.2], ImageSize -> 200], {200,
          40}, Bottom], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 
         Pattern[$CellContext`len, 
          Blank[]]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, $CellContext`len], ImageSize -> 
          200], {200, 40}, Bottom], $CellContext`PlaySet[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Table[
          SoundNote[
           
           Part[$CellContext`row, $CellContext`i], $CellContext`notelen], \
{$CellContext`i, 1, 
           Length[$CellContext`row]}]], $CellContext`fnOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Part[
         Fold[$CellContext`normalOrder, 
          $CellContext`cperms[
           Sort[$CellContext`s]], 
          Range[0, $CellContext`l]], 1], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := $CellContext`cut[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, Length[
                Part[$CellContext`s, $CellContext`i]] - $CellContext`k] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < 
          Part[#2, 2]& ]], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, 
              Length[$CellContext`s]] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < Part[#2, 2]& ], 1, 
         1], $CellContext`cut[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`z = 
          TakeWhile[$CellContext`s, Part[#, 2] == 
            Part[$CellContext`s, 1, 2]& ]}, 
         Table[
          Part[$CellContext`z, $CellContext`i, 1], {$CellContext`i, 1, 
           Length[$CellContext`z]}]], $CellContext`cperms[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       NestList[$CellContext`makeCPerm, $CellContext`s, 
         Length[$CellContext`s] - 1], $CellContext`makeCPerm[
         Pattern[$CellContext`pc, 
          Blank[]]] := $CellContext`ordered[
         $CellContext`cperm[$CellContext`pc]], $CellContext`ordered[
         Pattern[$CellContext`cp, 
          Blank[]]] := Table[
         If[$CellContext`i != 1, 
          If[
          Part[$CellContext`cp, $CellContext`i] < Part[$CellContext`cp, 1], 
           Part[$CellContext`cp, $CellContext`i] + 12, 
           Part[$CellContext`cp, $CellContext`i]], 
          Part[$CellContext`cp, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`cp]}], $CellContext`cperm[
         Pattern[$CellContext`set, 
          Blank[]]] := Module[{$CellContext`st = Sort[$CellContext`set]}, 
         Delete[
          Append[$CellContext`st, 
           Part[$CellContext`st, 1]], 1]], $CellContext`primeForm[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`t = $CellContext`fnOrder[$CellContext`s, 
            Length[$CellContext`s]]}, 
         $CellContext`transpose[$CellContext`t, -
          Part[$CellContext`t, 1]]], $CellContext`Invert[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Abs[
         12 - Part[$CellContext`ps, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`ps]}], $CellContext`findn[
         Pattern[$CellContext`PCSet, 
          Blank[]]] := If[Length[
           Position[
            Tally[
             Flatten[
              Table[
               Table[
                Mod[
                Part[$CellContext`PCSet, $CellContext`j] + 
                 Part[$CellContext`PCSet, $CellContext`i], 
                 12], {$CellContext`i, 1, 
                 Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                Length[$CellContext`PCSet]}]]], {
             Blank[], 
             Length[$CellContext`PCSet]}]] == 0, -1, 
         Part[
          Part[
           Flatten[
            Table[
             Table[
              Mod[
              Part[$CellContext`PCSet, $CellContext`j] + 
               Part[$CellContext`PCSet, $CellContext`i], 12], {$CellContext`i,
                1, 
               Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
              Length[$CellContext`PCSet]}]], 
           Part[
            Position[
             Tally[
              Flatten[
               Table[
                Table[
                 Mod[
                 Part[$CellContext`PCSet, $CellContext`j] + 
                  Part[$CellContext`PCSet, $CellContext`i], 
                  12], {$CellContext`i, 1, 
                  Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                 Length[$CellContext`PCSet]}]]], {
              Blank[], 
              Length[$CellContext`PCSet]}], 1]], 1]], $CellContext`mod12[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         If[Part[$CellContext`s, $CellContext`i] > 11, 
          Mod[
           Part[$CellContext`s, $CellContext`i], 12], 
          Part[$CellContext`s, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`tni[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`transpose[
         $CellContext`inverse[$CellContext`s], $CellContext`n], \
$CellContext`inverse[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         Mod[
         12 - Part[$CellContext`s, $CellContext`i], 12], {$CellContext`i, 1, 
          Length[$CellContext`s]}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.598410626890005*^9, 3.5984106459849167`*^9}},
 CellID->908692953]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
Pitch-class set theory emerged during the 20th century as a manner of \
analyzing the atonal compositions of various composers. A pitch-class set is \
a subset of the pitches of the chromatic scale, represented by integers 0 \
through 11. Important information about each set, including the Forte number \
(an identifier), cardinal number (number of elements in a set), and interval \
vector (interval content of a set), and matrix are shown, as well as several \
important orderings and transformations of the set: the transpose, normal \
form, prime form, and inversion. The definitions of these orderings and \
transformations are given in the \"details\" section. Many of the set classes \
in this demonstration are labeled by a musical composition in which they \
occur. \
\>", "ManipulateCaption",
 CellChangeTimes->{{3.598022559634985*^9, 3.598022560405628*^9}, {
   3.598119973751587*^9, 3.598119978225333*^9}, {3.598120657406364*^9, 
   3.5981207051019297`*^9}, {3.598126756449658*^9, 3.598126766918202*^9}, 
   3.5981270363715687`*^9, {3.598127883105321*^9, 3.598127883612762*^9}, {
   3.598127956999175*^9, 3.598128001566305*^9}, {3.598128417401492*^9, 
   3.5981284220793867`*^9}, {3.598129105076548*^9, 3.5981291103066263`*^9}, {
   3.598129246542047*^9, 3.5981292469482117`*^9}, {3.598130850656769*^9, 
   3.598130852430238*^9}, {3.598131638952135*^9, 3.598131659216423*^9}, {
   3.5981316972548656`*^9, 3.598131734700975*^9}, {3.5981317753032837`*^9, 
   3.598131897518435*^9}, {3.598132006699044*^9, 3.598132106373397*^9}, {
   3.598132191591548*^9, 3.598132229851344*^9}, {3.598132280099966*^9, 
   3.598132450157406*^9}, {3.598132526074469*^9, 3.5981326104606047`*^9}, {
   3.5981389762848587`*^9, 3.598139014514536*^9}, {3.598139054556385*^9, 
   3.59813909044941*^9}, {3.598139245722994*^9, 3.598139257246442*^9}, {
   3.598139568433522*^9, 3.5981396012323923`*^9}, {3.598140153004883*^9, 
   3.5981404486616373`*^9}, {3.59840914807168*^9, 3.5984091493232203`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Matrix$$ = False, $CellContext`n$$ = 
    0, $CellContext`PCSet$$ = {0, 1, 2, 3, 5, 6, 7, 9, 10}, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`PCSet$$], {0, 1, 4, 8}, "Set class"}, {{0} -> 
       "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
       "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
       "Berg - Wozzeck", {3, 4, 7, 10} -> 
       "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
       "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 10, 
        0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 1, 3, 
        5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
       "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 7, 
        9, 10} -> "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10,
         5} -> "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 
        4, 7, 3} -> 
       "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 7, 2, 9, 4,
         8, 5} -> "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{
       Hold[$CellContext`n$$], 0, "Transpose level"}, 0, 8, 1}, {{
       Hold[$CellContext`Matrix$$], False}, {True, False}}}, 
    Typeset`size$$ = {531.701171875, {320., 31.65625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`PCSet$235750$$ = False, $CellContext`n$235751$$ = 
    0, $CellContext`Matrix$235752$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Matrix$$ = False, $CellContext`n$$ = 
        0, $CellContext`PCSet$$ = {0, 1, 4, 8}}, "ControllerVariables" :> {
        Hold[$CellContext`PCSet$$, $CellContext`PCSet$235750$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$235751$$, 0], 
        Hold[$CellContext`Matrix$$, $CellContext`Matrix$235752$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4, 8}, 
           "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{3, 4,
            6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 1, 
           2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, "9-11"}}; 
       If[$CellContext`Matrix$$ == False, 
         Row[{
           Column[{
             Style[
              Text[
               StringJoin["Forte Number: ", 
                ToString[
                 $CellContext`ForteNumber[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Cardinal Number: ", 
                ToString[
                 Length[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Interval Vector: ", 
                ToString[
                 $CellContext`ICSet[$CellContext`PCSet$$]]]], 16]}], 
           Spacer[10], 
           Panel[
            Grid[{{
               Style[
                Text["Original set"], 14], 
               Style[
                Text[
                 ToString[$CellContext`PCSet$$]], 12], 
               $CellContext`PlaySetChord[$CellContext`PCSet$$, 1.2]}, {
               Style[
                Text[
                 StringJoin["Transpose at level ", 
                  ToString[$CellContext`n$$]]], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2/3]]]]}, {
               Style[
                Text["Normal form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`fnOrder[$CellContext`PCSet$$, 
                   Length[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`fnOrder[$CellContext`PCSet$$, 
                  Length[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`fnOrder[$CellContext`PCSet$$, 
                    Length[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Prime form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`primeForm[
                   Sort[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`primeForm[
                  Sort[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`primeForm[
                    Sort[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Inversion"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`Invert[$CellContext`PCSet$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`Invert[$CellContext`PCSet$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`Invert[$CellContext`PCSet$$], 1.2/3]]]]}}]]}], 
         Column[{
           If[$CellContext`findn[$CellContext`PCSet$$] == -1, 
            Style[
             Text["Not Combinatorial"], 16, Red], 
            Style[
             Text[
              StringJoin["Combinatorial: \n T(", 
               ToString[
                $CellContext`findn[$CellContext`PCSet$$]], ")I = ", 
               ToString[
                $CellContext`mod12[
                 $CellContext`tni[$CellContext`PCSet$$, 
                  $CellContext`findn[$CellContext`PCSet$$]]]]]], 16, Blue]], 
           Style[
            Text[
             Grid[
              Table[
               If[$CellContext`j == 0, 
                Prepend[
                 Table[
                  
                  Part[$CellContext`PCSet$$, $CellContext`k], {$CellContext`k,
                    1, 
                   Length[$CellContext`PCSet$$]}], " "], 
                Prepend[
                 Table[
                  Mod[
                  Part[$CellContext`PCSet$$, $CellContext`j] + 
                   Part[$CellContext`PCSet$$, $CellContext`i], 
                   12], {$CellContext`i, 1, 
                   Length[$CellContext`PCSet$$]}], 
                 
                 Part[$CellContext`PCSet$$, $CellContext`j]]], \
{$CellContext`j, 0, 
                Length[$CellContext`PCSet$$]}], 
              Dividers -> {{2 -> Thickness[2]}, {2 -> Thickness[2]}}, Frame -> 
              All]], 18]}]]), 
      "Specifications" :> {{{$CellContext`PCSet$$, {0, 1, 4, 8}, 
          "Set class"}, {{0} -> "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
          "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
          "Berg - Wozzeck", {3, 4, 7, 10} -> 
          "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
          "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 
           10, 0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 
           1, 3, 5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
          "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 
           7, 9, 10} -> 
          "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10, 5} -> 
          "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 4, 7,
            3} -> "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 
           7, 2, 9, 4, 8, 5} -> 
          "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{$CellContext`n$$, 0, 
          "Transpose level"}, 0, 8, 1}, {{$CellContext`Matrix$$, False}, {
         True, False}}}, 
      "Options" :> {
       ContinuousAction -> False, ContentSize -> {610, 400}, Alignment -> 
        Center}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{624., {255., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4,
           8}, "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{
          3, 4, 6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 
          1, 2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, 
          "9-11"}}, $CellContext`ForteNumber[
         Pattern[$CellContext`s, 
          Blank[]]] := If[
         And[Length[$CellContext`s] < 10, Length[$CellContext`s] > 2], 
         Part[$CellContext`fortenums, 
          Part[
           Position[$CellContext`fortenums, $CellContext`s], 1, 1], 2], 
         "N/A"], $CellContext`ICSet[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Count[
          Table[
           $CellContext`poss[$CellContext`i, 
            Subsets[$CellContext`ps, {2}]], {$CellContext`i, 1, 
            Length[
             
             Subsets[$CellContext`ps, {
              2}]]}], $CellContext`j], {$CellContext`j, 1, 
          6}], $CellContext`poss[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`tup, 
          Blank[]]] := If[
         And[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] > 6, 
          Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] < 12], 
         Mod[12, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 1]]], 
         If[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] != 0, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 
            1]]]], $CellContext`PlaySetChord[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Append[
          Table[
           SoundNote[
            Part[$CellContext`row, $CellContext`i], $CellContext`notelen/
            3], {$CellContext`i, 1, 
            Length[$CellContext`row]}], 
          SoundNote[
           Table[
            Part[$CellContext`row, $CellContext`i], {$CellContext`i, 1, 
             
             Length[$CellContext`row]}], $CellContext`notelen]]], \
$CellContext`transpose[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Table[Part[$CellContext`s, $CellContext`i] + $CellContext`n, \
{$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 1.2 Blank[]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, 1.2], ImageSize -> 200], {200,
          40}, Bottom], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 
         Pattern[$CellContext`len, 
          Blank[]]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, $CellContext`len], ImageSize -> 
          200], {200, 40}, Bottom], $CellContext`PlaySet[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Table[
          SoundNote[
           
           Part[$CellContext`row, $CellContext`i], $CellContext`notelen], \
{$CellContext`i, 1, 
           Length[$CellContext`row]}]], $CellContext`fnOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Part[
         Fold[$CellContext`normalOrder, 
          $CellContext`cperms[
           Sort[$CellContext`s]], 
          Range[0, $CellContext`l]], 1], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := $CellContext`cut[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, Length[
                Part[$CellContext`s, $CellContext`i]] - $CellContext`k] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < 
          Part[#2, 2]& ]], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, 
              Length[$CellContext`s]] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < Part[#2, 2]& ], 1, 
         1], $CellContext`cut[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`z = 
          TakeWhile[$CellContext`s, Part[#, 2] == 
            Part[$CellContext`s, 1, 2]& ]}, 
         Table[
          Part[$CellContext`z, $CellContext`i, 1], {$CellContext`i, 1, 
           Length[$CellContext`z]}]], $CellContext`cperms[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       NestList[$CellContext`makeCPerm, $CellContext`s, 
         Length[$CellContext`s] - 1], $CellContext`makeCPerm[
         Pattern[$CellContext`pc, 
          Blank[]]] := $CellContext`ordered[
         $CellContext`cperm[$CellContext`pc]], $CellContext`ordered[
         Pattern[$CellContext`cp, 
          Blank[]]] := Table[
         If[$CellContext`i != 1, 
          If[
          Part[$CellContext`cp, $CellContext`i] < Part[$CellContext`cp, 1], 
           Part[$CellContext`cp, $CellContext`i] + 12, 
           Part[$CellContext`cp, $CellContext`i]], 
          Part[$CellContext`cp, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`cp]}], $CellContext`cperm[
         Pattern[$CellContext`set, 
          Blank[]]] := Module[{$CellContext`st = Sort[$CellContext`set]}, 
         Delete[
          Append[$CellContext`st, 
           Part[$CellContext`st, 1]], 1]], $CellContext`primeForm[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`t = $CellContext`fnOrder[$CellContext`s, 
            Length[$CellContext`s]]}, 
         $CellContext`transpose[$CellContext`t, -
          Part[$CellContext`t, 1]]], $CellContext`Invert[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Abs[
         12 - Part[$CellContext`ps, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`ps]}], $CellContext`findn[
         Pattern[$CellContext`PCSet, 
          Blank[]]] := If[Length[
           Position[
            Tally[
             Flatten[
              Table[
               Table[
                Mod[
                Part[$CellContext`PCSet, $CellContext`j] + 
                 Part[$CellContext`PCSet, $CellContext`i], 
                 12], {$CellContext`i, 1, 
                 Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                Length[$CellContext`PCSet]}]]], {
             Blank[], 
             Length[$CellContext`PCSet]}]] == 0, -1, 
         Part[
          Part[
           Flatten[
            Table[
             Table[
              Mod[
              Part[$CellContext`PCSet, $CellContext`j] + 
               Part[$CellContext`PCSet, $CellContext`i], 12], {$CellContext`i,
                1, 
               Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
              Length[$CellContext`PCSet]}]], 
           Part[
            Position[
             Tally[
              Flatten[
               Table[
                Table[
                 Mod[
                 Part[$CellContext`PCSet, $CellContext`j] + 
                  Part[$CellContext`PCSet, $CellContext`i], 
                  12], {$CellContext`i, 1, 
                  Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                 Length[$CellContext`PCSet]}]]], {
              Blank[], 
              Length[$CellContext`PCSet]}], 1]], 1]], $CellContext`mod12[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         If[Part[$CellContext`s, $CellContext`i] > 11, 
          Mod[
           Part[$CellContext`s, $CellContext`i], 12], 
          Part[$CellContext`s, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`tni[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`transpose[
         $CellContext`inverse[$CellContext`s], $CellContext`n], \
$CellContext`inverse[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         Mod[
         12 - Part[$CellContext`s, $CellContext`i], 12], {$CellContext`i, 1, 
          Length[$CellContext`s]}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.598410626890005*^9, 3.5984106459849167`*^9}},
 CellID->298290030]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Matrix$$ = False, $CellContext`n$$ = 
    0, $CellContext`PCSet$$ = {11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`PCSet$$], {0, 1, 4, 8}, "Set class"}, {{0} -> 
       "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
       "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
       "Berg - Wozzeck", {3, 4, 7, 10} -> 
       "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
       "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 10, 
        0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 1, 3, 
        5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
       "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 7, 
        9, 10} -> "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10,
         5} -> "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 
        4, 7, 3} -> 
       "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 7, 2, 9, 4,
         8, 5} -> "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{
       Hold[$CellContext`n$$], 0, "Transpose level"}, 0, 8, 1}, {{
       Hold[$CellContext`Matrix$$], False}, {True, False}}}, 
    Typeset`size$$ = {567.701171875, {320., 31.65625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`PCSet$235750$$ = False, $CellContext`n$235751$$ = 
    0, $CellContext`Matrix$235752$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Matrix$$ = False, $CellContext`n$$ = 
        0, $CellContext`PCSet$$ = {0, 1, 4, 8}}, "ControllerVariables" :> {
        Hold[$CellContext`PCSet$$, $CellContext`PCSet$235750$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$235751$$, 0], 
        Hold[$CellContext`Matrix$$, $CellContext`Matrix$235752$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4, 8}, 
           "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{3, 4,
            6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 1, 
           2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, "9-11"}}; 
       If[$CellContext`Matrix$$ == False, 
         Row[{
           Column[{
             Style[
              Text[
               StringJoin["Forte Number: ", 
                ToString[
                 $CellContext`ForteNumber[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Cardinal Number: ", 
                ToString[
                 Length[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Interval Vector: ", 
                ToString[
                 $CellContext`ICSet[$CellContext`PCSet$$]]]], 16]}], 
           Spacer[10], 
           Panel[
            Grid[{{
               Style[
                Text["Original set"], 14], 
               Style[
                Text[
                 ToString[$CellContext`PCSet$$]], 12], 
               $CellContext`PlaySetChord[$CellContext`PCSet$$, 1.2]}, {
               Style[
                Text[
                 StringJoin["Transpose at level ", 
                  ToString[$CellContext`n$$]]], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2/3]]]]}, {
               Style[
                Text["Normal form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`fnOrder[$CellContext`PCSet$$, 
                   Length[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`fnOrder[$CellContext`PCSet$$, 
                  Length[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`fnOrder[$CellContext`PCSet$$, 
                    Length[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Prime form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`primeForm[
                   Sort[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`primeForm[
                  Sort[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`primeForm[
                    Sort[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Inversion"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`Invert[$CellContext`PCSet$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`Invert[$CellContext`PCSet$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`Invert[$CellContext`PCSet$$], 1.2/3]]]]}}]]}], 
         Column[{
           If[$CellContext`findn[$CellContext`PCSet$$] == -1, 
            Style[
             Text["Not Combinatorial"], 16, Red], 
            Style[
             Text[
              StringJoin["Combinatorial: \n T(", 
               ToString[
                $CellContext`findn[$CellContext`PCSet$$]], ")I = ", 
               ToString[
                $CellContext`mod12[
                 $CellContext`tni[$CellContext`PCSet$$, 
                  $CellContext`findn[$CellContext`PCSet$$]]]]]], 16, Blue]], 
           Style[
            Text[
             Grid[
              Table[
               If[$CellContext`j == 0, 
                Prepend[
                 Table[
                  
                  Part[$CellContext`PCSet$$, $CellContext`k], {$CellContext`k,
                    1, 
                   Length[$CellContext`PCSet$$]}], " "], 
                Prepend[
                 Table[
                  Mod[
                  Part[$CellContext`PCSet$$, $CellContext`j] + 
                   Part[$CellContext`PCSet$$, $CellContext`i], 
                   12], {$CellContext`i, 1, 
                   Length[$CellContext`PCSet$$]}], 
                 
                 Part[$CellContext`PCSet$$, $CellContext`j]]], \
{$CellContext`j, 0, 
                Length[$CellContext`PCSet$$]}], 
              Dividers -> {{2 -> Thickness[2]}, {2 -> Thickness[2]}}, Frame -> 
              All]], 18]}]]), 
      "Specifications" :> {{{$CellContext`PCSet$$, {0, 1, 4, 8}, 
          "Set class"}, {{0} -> "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
          "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
          "Berg - Wozzeck", {3, 4, 7, 10} -> 
          "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
          "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 
           10, 0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 
           1, 3, 5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
          "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 
           7, 9, 10} -> 
          "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10, 5} -> 
          "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 4, 7,
            3} -> "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 
           7, 2, 9, 4, 8, 5} -> 
          "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{$CellContext`n$$, 0, 
          "Transpose level"}, 0, 8, 1}, {{$CellContext`Matrix$$, False}, {
         True, False}}}, 
      "Options" :> {
       ContinuousAction -> False, ContentSize -> {610, 400}, Alignment -> 
        Center}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{624., {254., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4,
           8}, "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{
          3, 4, 6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 
          1, 2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, 
          "9-11"}}, $CellContext`ForteNumber[
         Pattern[$CellContext`s, 
          Blank[]]] := If[
         And[Length[$CellContext`s] < 10, Length[$CellContext`s] > 2], 
         Part[$CellContext`fortenums, 
          Part[
           Position[$CellContext`fortenums, $CellContext`s], 1, 1], 2], 
         "N/A"], $CellContext`ICSet[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Count[
          Table[
           $CellContext`poss[$CellContext`i, 
            Subsets[$CellContext`ps, {2}]], {$CellContext`i, 1, 
            Length[
             
             Subsets[$CellContext`ps, {
              2}]]}], $CellContext`j], {$CellContext`j, 1, 
          6}], $CellContext`poss[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`tup, 
          Blank[]]] := If[
         And[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] > 6, 
          Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] < 12], 
         Mod[12, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 1]]], 
         If[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] != 0, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 
            1]]]], $CellContext`PlaySetChord[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Append[
          Table[
           SoundNote[
            Part[$CellContext`row, $CellContext`i], $CellContext`notelen/
            3], {$CellContext`i, 1, 
            Length[$CellContext`row]}], 
          SoundNote[
           Table[
            Part[$CellContext`row, $CellContext`i], {$CellContext`i, 1, 
             
             Length[$CellContext`row]}], $CellContext`notelen]]], \
$CellContext`transpose[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Table[Part[$CellContext`s, $CellContext`i] + $CellContext`n, \
{$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 1.2 Blank[]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, 1.2], ImageSize -> 200], {200,
          40}, Bottom], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 
         Pattern[$CellContext`len, 
          Blank[]]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, $CellContext`len], ImageSize -> 
          200], {200, 40}, Bottom], $CellContext`PlaySet[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Table[
          SoundNote[
           
           Part[$CellContext`row, $CellContext`i], $CellContext`notelen], \
{$CellContext`i, 1, 
           Length[$CellContext`row]}]], $CellContext`fnOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Part[
         Fold[$CellContext`normalOrder, 
          $CellContext`cperms[
           Sort[$CellContext`s]], 
          Range[0, $CellContext`l]], 1], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := $CellContext`cut[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, Length[
                Part[$CellContext`s, $CellContext`i]] - $CellContext`k] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < 
          Part[#2, 2]& ]], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, 
              Length[$CellContext`s]] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < Part[#2, 2]& ], 1, 
         1], $CellContext`cut[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`z = 
          TakeWhile[$CellContext`s, Part[#, 2] == 
            Part[$CellContext`s, 1, 2]& ]}, 
         Table[
          Part[$CellContext`z, $CellContext`i, 1], {$CellContext`i, 1, 
           Length[$CellContext`z]}]], $CellContext`cperms[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       NestList[$CellContext`makeCPerm, $CellContext`s, 
         Length[$CellContext`s] - 1], $CellContext`makeCPerm[
         Pattern[$CellContext`pc, 
          Blank[]]] := $CellContext`ordered[
         $CellContext`cperm[$CellContext`pc]], $CellContext`ordered[
         Pattern[$CellContext`cp, 
          Blank[]]] := Table[
         If[$CellContext`i != 1, 
          If[
          Part[$CellContext`cp, $CellContext`i] < Part[$CellContext`cp, 1], 
           Part[$CellContext`cp, $CellContext`i] + 12, 
           Part[$CellContext`cp, $CellContext`i]], 
          Part[$CellContext`cp, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`cp]}], $CellContext`cperm[
         Pattern[$CellContext`set, 
          Blank[]]] := Module[{$CellContext`st = Sort[$CellContext`set]}, 
         Delete[
          Append[$CellContext`st, 
           Part[$CellContext`st, 1]], 1]], $CellContext`primeForm[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`t = $CellContext`fnOrder[$CellContext`s, 
            Length[$CellContext`s]]}, 
         $CellContext`transpose[$CellContext`t, -
          Part[$CellContext`t, 1]]], $CellContext`Invert[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Abs[
         12 - Part[$CellContext`ps, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`ps]}], $CellContext`findn[
         Pattern[$CellContext`PCSet, 
          Blank[]]] := If[Length[
           Position[
            Tally[
             Flatten[
              Table[
               Table[
                Mod[
                Part[$CellContext`PCSet, $CellContext`j] + 
                 Part[$CellContext`PCSet, $CellContext`i], 
                 12], {$CellContext`i, 1, 
                 Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                Length[$CellContext`PCSet]}]]], {
             Blank[], 
             Length[$CellContext`PCSet]}]] == 0, -1, 
         Part[
          Part[
           Flatten[
            Table[
             Table[
              Mod[
              Part[$CellContext`PCSet, $CellContext`j] + 
               Part[$CellContext`PCSet, $CellContext`i], 12], {$CellContext`i,
                1, 
               Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
              Length[$CellContext`PCSet]}]], 
           Part[
            Position[
             Tally[
              Flatten[
               Table[
                Table[
                 Mod[
                 Part[$CellContext`PCSet, $CellContext`j] + 
                  Part[$CellContext`PCSet, $CellContext`i], 
                  12], {$CellContext`i, 1, 
                  Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                 Length[$CellContext`PCSet]}]]], {
              Blank[], 
              Length[$CellContext`PCSet]}], 1]], 1]], $CellContext`mod12[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         If[Part[$CellContext`s, $CellContext`i] > 11, 
          Mod[
           Part[$CellContext`s, $CellContext`i], 12], 
          Part[$CellContext`s, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`tni[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`transpose[
         $CellContext`inverse[$CellContext`s], $CellContext`n], \
$CellContext`inverse[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         Mod[
         12 - Part[$CellContext`s, $CellContext`i], 12], {$CellContext`i, 1, 
          Length[$CellContext`s]}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.598410626890005*^9, 3.5984106459849167`*^9}},
 CellID->1133702112],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Matrix$$ = True, $CellContext`n$$ = 
    0, $CellContext`PCSet$$ = {0, 1, 2, 3, 4, 5, 6, 7}, Typeset`show$$ = True,
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`PCSet$$], {0, 1, 4, 8}, "Set class"}, {{0} -> 
       "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
       "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
       "Berg - Wozzeck", {3, 4, 7, 10} -> 
       "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
       "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 10, 
        0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 1, 3, 
        5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
       "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 7, 
        9, 10} -> "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10,
         5} -> "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 
        4, 7, 3} -> 
       "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 7, 2, 9, 4,
         8, 5} -> "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{
       Hold[$CellContext`n$$], 0, "Transpose level"}, 0, 8, 1}, {{
       Hold[$CellContext`Matrix$$], False}, {True, False}}}, 
    Typeset`size$$ = {254., {134.34375, 139.65625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`PCSet$235750$$ = False, $CellContext`n$235751$$ = 
    0, $CellContext`Matrix$235752$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Matrix$$ = False, $CellContext`n$$ = 
        0, $CellContext`PCSet$$ = {0, 1, 4, 8}}, "ControllerVariables" :> {
        Hold[$CellContext`PCSet$$, $CellContext`PCSet$235750$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$235751$$, 0], 
        Hold[$CellContext`Matrix$$, $CellContext`Matrix$235752$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4, 8}, 
           "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{3, 4,
            6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 1, 
           2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, "9-11"}}; 
       If[$CellContext`Matrix$$ == False, 
         Row[{
           Column[{
             Style[
              Text[
               StringJoin["Forte Number: ", 
                ToString[
                 $CellContext`ForteNumber[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Cardinal Number: ", 
                ToString[
                 Length[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Interval Vector: ", 
                ToString[
                 $CellContext`ICSet[$CellContext`PCSet$$]]]], 16]}], 
           Spacer[10], 
           Panel[
            Grid[{{
               Style[
                Text["Original set"], 14], 
               Style[
                Text[
                 ToString[$CellContext`PCSet$$]], 12], 
               $CellContext`PlaySetChord[$CellContext`PCSet$$, 1.2]}, {
               Style[
                Text[
                 StringJoin["Transpose at level ", 
                  ToString[$CellContext`n$$]]], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2/3]]]]}, {
               Style[
                Text["Normal form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`fnOrder[$CellContext`PCSet$$, 
                   Length[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`fnOrder[$CellContext`PCSet$$, 
                  Length[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`fnOrder[$CellContext`PCSet$$, 
                    Length[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Prime form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`primeForm[
                   Sort[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`primeForm[
                  Sort[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`primeForm[
                    Sort[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Inversion"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`Invert[$CellContext`PCSet$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`Invert[$CellContext`PCSet$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`Invert[$CellContext`PCSet$$], 1.2/3]]]]}}]]}], 
         Column[{
           If[$CellContext`findn[$CellContext`PCSet$$] == -1, 
            Style[
             Text["Not Combinatorial"], 16, Red], 
            Style[
             Text[
              StringJoin["Combinatorial: \n T(", 
               ToString[
                $CellContext`findn[$CellContext`PCSet$$]], ")I = ", 
               ToString[
                $CellContext`mod12[
                 $CellContext`tni[$CellContext`PCSet$$, 
                  $CellContext`findn[$CellContext`PCSet$$]]]]]], 16, Blue]], 
           Style[
            Text[
             Grid[
              Table[
               If[$CellContext`j == 0, 
                Prepend[
                 Table[
                  
                  Part[$CellContext`PCSet$$, $CellContext`k], {$CellContext`k,
                    1, 
                   Length[$CellContext`PCSet$$]}], " "], 
                Prepend[
                 Table[
                  Mod[
                  Part[$CellContext`PCSet$$, $CellContext`j] + 
                   Part[$CellContext`PCSet$$, $CellContext`i], 
                   12], {$CellContext`i, 1, 
                   Length[$CellContext`PCSet$$]}], 
                 
                 Part[$CellContext`PCSet$$, $CellContext`j]]], \
{$CellContext`j, 0, 
                Length[$CellContext`PCSet$$]}], 
              Dividers -> {{2 -> Thickness[2]}, {2 -> Thickness[2]}}, Frame -> 
              All]], 18]}]]), 
      "Specifications" :> {{{$CellContext`PCSet$$, {0, 1, 4, 8}, 
          "Set class"}, {{0} -> "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
          "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
          "Berg - Wozzeck", {3, 4, 7, 10} -> 
          "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
          "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 
           10, 0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 
           1, 3, 5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
          "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 
           7, 9, 10} -> 
          "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10, 5} -> 
          "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 4, 7,
            3} -> "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 
           7, 2, 9, 4, 8, 5} -> 
          "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{$CellContext`n$$, 0, 
          "Transpose level"}, 0, 8, 1}, {{$CellContext`Matrix$$, False}, {
         True, False}}}, 
      "Options" :> {
       ContinuousAction -> False, ContentSize -> {610, 400}, Alignment -> 
        Center}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{624., {255., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4,
           8}, "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{
          3, 4, 6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 
          1, 2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, 
          "9-11"}}, $CellContext`ForteNumber[
         Pattern[$CellContext`s, 
          Blank[]]] := If[
         And[Length[$CellContext`s] < 10, Length[$CellContext`s] > 2], 
         Part[$CellContext`fortenums, 
          Part[
           Position[$CellContext`fortenums, $CellContext`s], 1, 1], 2], 
         "N/A"], $CellContext`ICSet[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Count[
          Table[
           $CellContext`poss[$CellContext`i, 
            Subsets[$CellContext`ps, {2}]], {$CellContext`i, 1, 
            Length[
             
             Subsets[$CellContext`ps, {
              2}]]}], $CellContext`j], {$CellContext`j, 1, 
          6}], $CellContext`poss[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`tup, 
          Blank[]]] := If[
         And[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] > 6, 
          Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] < 12], 
         Mod[12, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 1]]], 
         If[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] != 0, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 
            1]]]], $CellContext`PlaySetChord[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Append[
          Table[
           SoundNote[
            Part[$CellContext`row, $CellContext`i], $CellContext`notelen/
            3], {$CellContext`i, 1, 
            Length[$CellContext`row]}], 
          SoundNote[
           Table[
            Part[$CellContext`row, $CellContext`i], {$CellContext`i, 1, 
             
             Length[$CellContext`row]}], $CellContext`notelen]]], \
$CellContext`transpose[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Table[Part[$CellContext`s, $CellContext`i] + $CellContext`n, \
{$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 1.2 Blank[]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, 1.2], ImageSize -> 200], {200,
          40}, Bottom], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 
         Pattern[$CellContext`len, 
          Blank[]]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, $CellContext`len], ImageSize -> 
          200], {200, 40}, Bottom], $CellContext`PlaySet[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Table[
          SoundNote[
           
           Part[$CellContext`row, $CellContext`i], $CellContext`notelen], \
{$CellContext`i, 1, 
           Length[$CellContext`row]}]], $CellContext`fnOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Part[
         Fold[$CellContext`normalOrder, 
          $CellContext`cperms[
           Sort[$CellContext`s]], 
          Range[0, $CellContext`l]], 1], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := $CellContext`cut[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, Length[
                Part[$CellContext`s, $CellContext`i]] - $CellContext`k] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < 
          Part[#2, 2]& ]], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, 
              Length[$CellContext`s]] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < Part[#2, 2]& ], 1, 
         1], $CellContext`cut[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`z = 
          TakeWhile[$CellContext`s, Part[#, 2] == 
            Part[$CellContext`s, 1, 2]& ]}, 
         Table[
          Part[$CellContext`z, $CellContext`i, 1], {$CellContext`i, 1, 
           Length[$CellContext`z]}]], $CellContext`cperms[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       NestList[$CellContext`makeCPerm, $CellContext`s, 
         Length[$CellContext`s] - 1], $CellContext`makeCPerm[
         Pattern[$CellContext`pc, 
          Blank[]]] := $CellContext`ordered[
         $CellContext`cperm[$CellContext`pc]], $CellContext`ordered[
         Pattern[$CellContext`cp, 
          Blank[]]] := Table[
         If[$CellContext`i != 1, 
          If[
          Part[$CellContext`cp, $CellContext`i] < Part[$CellContext`cp, 1], 
           Part[$CellContext`cp, $CellContext`i] + 12, 
           Part[$CellContext`cp, $CellContext`i]], 
          Part[$CellContext`cp, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`cp]}], $CellContext`cperm[
         Pattern[$CellContext`set, 
          Blank[]]] := Module[{$CellContext`st = Sort[$CellContext`set]}, 
         Delete[
          Append[$CellContext`st, 
           Part[$CellContext`st, 1]], 1]], $CellContext`primeForm[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`t = $CellContext`fnOrder[$CellContext`s, 
            Length[$CellContext`s]]}, 
         $CellContext`transpose[$CellContext`t, -
          Part[$CellContext`t, 1]]], $CellContext`Invert[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Abs[
         12 - Part[$CellContext`ps, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`ps]}], $CellContext`findn[
         Pattern[$CellContext`PCSet, 
          Blank[]]] := If[Length[
           Position[
            Tally[
             Flatten[
              Table[
               Table[
                Mod[
                Part[$CellContext`PCSet, $CellContext`j] + 
                 Part[$CellContext`PCSet, $CellContext`i], 
                 12], {$CellContext`i, 1, 
                 Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                Length[$CellContext`PCSet]}]]], {
             Blank[], 
             Length[$CellContext`PCSet]}]] == 0, -1, 
         Part[
          Part[
           Flatten[
            Table[
             Table[
              Mod[
              Part[$CellContext`PCSet, $CellContext`j] + 
               Part[$CellContext`PCSet, $CellContext`i], 12], {$CellContext`i,
                1, 
               Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
              Length[$CellContext`PCSet]}]], 
           Part[
            Position[
             Tally[
              Flatten[
               Table[
                Table[
                 Mod[
                 Part[$CellContext`PCSet, $CellContext`j] + 
                  Part[$CellContext`PCSet, $CellContext`i], 
                  12], {$CellContext`i, 1, 
                  Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                 Length[$CellContext`PCSet]}]]], {
              Blank[], 
              Length[$CellContext`PCSet]}], 1]], 1]], $CellContext`mod12[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         If[Part[$CellContext`s, $CellContext`i] > 11, 
          Mod[
           Part[$CellContext`s, $CellContext`i], 12], 
          Part[$CellContext`s, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`tni[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`transpose[
         $CellContext`inverse[$CellContext`s], $CellContext`n], \
$CellContext`inverse[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         Mod[
         12 - Part[$CellContext`s, $CellContext`i], 12], {$CellContext`i, 1, 
          Length[$CellContext`s]}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.598410626890005*^9, 3.5984106459849167`*^9}},
 CellID->1656480200],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Matrix$$ = True, $CellContext`n$$ = 
    0, $CellContext`PCSet$$ = {0, 1, 4, 8}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`PCSet$$], {0, 1, 4, 8}, "Set class"}, {{0} -> 
       "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
       "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
       "Berg - Wozzeck", {3, 4, 7, 10} -> 
       "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
       "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 10, 
        0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 1, 3, 
        5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
       "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 7, 
        9, 10} -> "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10,
         5} -> "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 
        4, 7, 3} -> 
       "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 7, 2, 9, 4,
         8, 5} -> "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{
       Hold[$CellContext`n$$], 0, "Transpose level"}, 0, 8, 1}, {{
       Hold[$CellContext`Matrix$$], False}, {True, False}}}, 
    Typeset`size$$ = {120., {73.84375, 79.15625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`PCSet$235750$$ = False, $CellContext`n$235751$$ = 
    0, $CellContext`Matrix$235752$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Matrix$$ = False, $CellContext`n$$ = 
        0, $CellContext`PCSet$$ = {0, 1, 4, 8}}, "ControllerVariables" :> {
        Hold[$CellContext`PCSet$$, $CellContext`PCSet$235750$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$235751$$, 0], 
        Hold[$CellContext`Matrix$$, $CellContext`Matrix$235752$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4, 8}, 
           "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{3, 4,
            6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 1, 
           2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, "9-11"}}; 
       If[$CellContext`Matrix$$ == False, 
         Row[{
           Column[{
             Style[
              Text[
               StringJoin["Forte Number: ", 
                ToString[
                 $CellContext`ForteNumber[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Cardinal Number: ", 
                ToString[
                 Length[$CellContext`PCSet$$]]]], 16], 
             Style[
              Text[
               StringJoin["Interval Vector: ", 
                ToString[
                 $CellContext`ICSet[$CellContext`PCSet$$]]]], 16]}], 
           Spacer[10], 
           Panel[
            Grid[{{
               Style[
                Text["Original set"], 14], 
               Style[
                Text[
                 ToString[$CellContext`PCSet$$]], 12], 
               $CellContext`PlaySetChord[$CellContext`PCSet$$, 1.2]}, {
               Style[
                Text[
                 StringJoin["Transpose at level ", 
                  ToString[$CellContext`n$$]]], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], 1.2/3]]]]}, {
               Style[
                Text["Normal form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`fnOrder[$CellContext`PCSet$$, 
                   Length[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`fnOrder[$CellContext`PCSet$$, 
                  Length[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`fnOrder[$CellContext`PCSet$$, 
                    Length[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Prime form"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`primeForm[
                   Sort[$CellContext`PCSet$$]]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`primeForm[
                  Sort[$CellContext`PCSet$$]], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`primeForm[
                    Sort[$CellContext`PCSet$$]], 1.2/3]]]]}, {
               Style[
                Text["Inversion"], 14], 
               Style[
                Text[
                 ToString[
                  $CellContext`Invert[$CellContext`PCSet$$]]], 12], 
               Button[
                $CellContext`ButtonLabel[
                 $CellContext`Invert[$CellContext`PCSet$$], 1.2], 
                EmitSound[
                 Sound[
                  $CellContext`PlaySet[
                   $CellContext`Invert[$CellContext`PCSet$$], 1.2/3]]]]}}]]}], 
         Column[{
           If[$CellContext`findn[$CellContext`PCSet$$] == -1, 
            Style[
             Text["Not Combinatorial"], 16, Red], 
            Style[
             Text[
              StringJoin["Combinatorial: \n T(", 
               ToString[
                $CellContext`findn[$CellContext`PCSet$$]], ")I = ", 
               ToString[
                $CellContext`mod12[
                 $CellContext`tni[$CellContext`PCSet$$, 
                  $CellContext`findn[$CellContext`PCSet$$]]]]]], 16, Blue]], 
           Style[
            Text[
             Grid[
              Table[
               If[$CellContext`j == 0, 
                Prepend[
                 Table[
                  
                  Part[$CellContext`PCSet$$, $CellContext`k], {$CellContext`k,
                    1, 
                   Length[$CellContext`PCSet$$]}], " "], 
                Prepend[
                 Table[
                  Mod[
                  Part[$CellContext`PCSet$$, $CellContext`j] + 
                   Part[$CellContext`PCSet$$, $CellContext`i], 
                   12], {$CellContext`i, 1, 
                   Length[$CellContext`PCSet$$]}], 
                 
                 Part[$CellContext`PCSet$$, $CellContext`j]]], \
{$CellContext`j, 0, 
                Length[$CellContext`PCSet$$]}], 
              Dividers -> {{2 -> Thickness[2]}, {2 -> Thickness[2]}}, Frame -> 
              All]], 18]}]]), 
      "Specifications" :> {{{$CellContext`PCSet$$, {0, 1, 4, 8}, 
          "Set class"}, {{0} -> "{0}", {4, 0} -> "{0, 4}", {1, 7, 2} -> 
          "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
          "Berg - Wozzeck", {3, 4, 7, 10} -> 
          "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
          "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 
           10, 0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 
           1, 3, 5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
          "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 
           7, 9, 10} -> 
          "Stravinsky - Rite of Spring", {8, 1, 11, 0, 7, 3, 2, 6, 10, 5} -> 
          "{8, 1, 11, 0, 7, 3, 2, 6, 10, 5}", {10, 11, 5, 0, 8, 2, 1, 6, 4, 7,
            3} -> "{10, 11, 5, 0, 8, 2, 1, 6, 4, 7, 3}", {11, 6, 10, 0, 1, 3, 
           7, 2, 9, 4, 8, 5} -> 
          "{11, 6, 10, 0, 1, 3, 7, 2, 9, 4, 8, 5}"}}, {{$CellContext`n$$, 0, 
          "Transpose level"}, 0, 8, 1}, {{$CellContext`Matrix$$, False}, {
         True, False}}}, 
      "Options" :> {
       ContinuousAction -> False, ContentSize -> {610, 400}, Alignment -> 
        Center}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{624., {255., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`fortenums = {{{1, 7, 2}, "3-5"}, {{0, 1, 4,
           8}, "4-19"}, {{3, 4, 7, 10}, "4-18"}, {{2, 3, 7, 8, 9}, "5-7"}, {{
          3, 4, 6, 8, 10, 0}, "6-34"}, {{7, 8, 10, 0, 1, 3, 5}, "7-35"}, {{0, 
          1, 2, 3, 4, 5, 6, 7}, "8-1"}, {{0, 1, 2, 3, 5, 6, 7, 9, 10}, 
          "9-11"}}, $CellContext`ForteNumber[
         Pattern[$CellContext`s, 
          Blank[]]] := If[
         And[Length[$CellContext`s] < 10, Length[$CellContext`s] > 2], 
         Part[$CellContext`fortenums, 
          Part[
           Position[$CellContext`fortenums, $CellContext`s], 1, 1], 2], 
         "N/A"], $CellContext`ICSet[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Count[
          Table[
           $CellContext`poss[$CellContext`i, 
            Subsets[$CellContext`ps, {2}]], {$CellContext`i, 1, 
            Length[
             
             Subsets[$CellContext`ps, {
              2}]]}], $CellContext`j], {$CellContext`j, 1, 
          6}], $CellContext`poss[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`tup, 
          Blank[]]] := If[
         And[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] > 6, 
          Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] < 12], 
         Mod[12, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 1]]], 
         If[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] != 0, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 
            1]]]], $CellContext`PlaySetChord[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Append[
          Table[
           SoundNote[
            Part[$CellContext`row, $CellContext`i], $CellContext`notelen/
            3], {$CellContext`i, 1, 
            Length[$CellContext`row]}], 
          SoundNote[
           Table[
            Part[$CellContext`row, $CellContext`i], {$CellContext`i, 1, 
             
             Length[$CellContext`row]}], $CellContext`notelen]]], \
$CellContext`transpose[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Table[Part[$CellContext`s, $CellContext`i] + $CellContext`n, \
{$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 1.2 Blank[]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, 1.2], ImageSize -> 200], {200,
          40}, Bottom], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 
         Pattern[$CellContext`len, 
          Blank[]]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, $CellContext`len], ImageSize -> 
          200], {200, 40}, Bottom], $CellContext`PlaySet[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Table[
          SoundNote[
           
           Part[$CellContext`row, $CellContext`i], $CellContext`notelen], \
{$CellContext`i, 1, 
           Length[$CellContext`row]}]], $CellContext`fnOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Part[
         Fold[$CellContext`normalOrder, 
          $CellContext`cperms[
           Sort[$CellContext`s]], 
          Range[0, $CellContext`l]], 1], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := $CellContext`cut[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, Length[
                Part[$CellContext`s, $CellContext`i]] - $CellContext`k] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < 
          Part[#2, 2]& ]], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, 
              Length[$CellContext`s]] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < Part[#2, 2]& ], 1, 
         1], $CellContext`cut[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`z = 
          TakeWhile[$CellContext`s, Part[#, 2] == 
            Part[$CellContext`s, 1, 2]& ]}, 
         Table[
          Part[$CellContext`z, $CellContext`i, 1], {$CellContext`i, 1, 
           Length[$CellContext`z]}]], $CellContext`cperms[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       NestList[$CellContext`makeCPerm, $CellContext`s, 
         Length[$CellContext`s] - 1], $CellContext`makeCPerm[
         Pattern[$CellContext`pc, 
          Blank[]]] := $CellContext`ordered[
         $CellContext`cperm[$CellContext`pc]], $CellContext`ordered[
         Pattern[$CellContext`cp, 
          Blank[]]] := Table[
         If[$CellContext`i != 1, 
          If[
          Part[$CellContext`cp, $CellContext`i] < Part[$CellContext`cp, 1], 
           Part[$CellContext`cp, $CellContext`i] + 12, 
           Part[$CellContext`cp, $CellContext`i]], 
          Part[$CellContext`cp, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`cp]}], $CellContext`cperm[
         Pattern[$CellContext`set, 
          Blank[]]] := Module[{$CellContext`st = Sort[$CellContext`set]}, 
         Delete[
          Append[$CellContext`st, 
           Part[$CellContext`st, 1]], 1]], $CellContext`primeForm[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`t = $CellContext`fnOrder[$CellContext`s, 
            Length[$CellContext`s]]}, 
         $CellContext`transpose[$CellContext`t, -
          Part[$CellContext`t, 1]]], $CellContext`Invert[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Abs[
         12 - Part[$CellContext`ps, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`ps]}], $CellContext`findn[
         Pattern[$CellContext`PCSet, 
          Blank[]]] := If[Length[
           Position[
            Tally[
             Flatten[
              Table[
               Table[
                Mod[
                Part[$CellContext`PCSet, $CellContext`j] + 
                 Part[$CellContext`PCSet, $CellContext`i], 
                 12], {$CellContext`i, 1, 
                 Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                Length[$CellContext`PCSet]}]]], {
             Blank[], 
             Length[$CellContext`PCSet]}]] == 0, -1, 
         Part[
          Part[
           Flatten[
            Table[
             Table[
              Mod[
              Part[$CellContext`PCSet, $CellContext`j] + 
               Part[$CellContext`PCSet, $CellContext`i], 12], {$CellContext`i,
                1, 
               Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
              Length[$CellContext`PCSet]}]], 
           Part[
            Position[
             Tally[
              Flatten[
               Table[
                Table[
                 Mod[
                 Part[$CellContext`PCSet, $CellContext`j] + 
                  Part[$CellContext`PCSet, $CellContext`i], 
                  12], {$CellContext`i, 1, 
                  Length[$CellContext`PCSet]}], {$CellContext`j, 1, 
                 Length[$CellContext`PCSet]}]]], {
              Blank[], 
              Length[$CellContext`PCSet]}], 1]], 1]], $CellContext`mod12[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         If[Part[$CellContext`s, $CellContext`i] > 11, 
          Mod[
           Part[$CellContext`s, $CellContext`i], 12], 
          Part[$CellContext`s, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`tni[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`transpose[
         $CellContext`inverse[$CellContext`s], $CellContext`n], \
$CellContext`inverse[
         Pattern[$CellContext`s, 
          Blank[]]] := Table[
         Mod[
         12 - Part[$CellContext`s, $CellContext`i], 12], {$CellContext`i, 1, 
          Length[$CellContext`s]}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.598410626890005*^9, 3.5984106459849167`*^9}},
 CellID->484721692]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell["\<\
The Forte-number is used to identify a set based on its prime form, and \
consists of the set's cardinal number, the number of elements in the set, and \
a number denoting its order in the listing created by Al1.2 Forte. The \
interval vector represents the interval content of a set: it represents the \
number of times the 6 interval classes (ic's) occur in a set, where an \
interval class is given by the difference between any two elements in the \
pitch-class set. The first number in an ic corresponds to the number of times \
ic1 occurs, the second number ic2, and so forth. The transposition at level n \
of a set is produced when an integer n is added to each element of the set. \
Normal form and prime form give the most \"compact\" form of a set. A set is \
in normal form if it is in order and the differences between the first \
element and each of the proceeding elements is minimized. Prime form is the \
transposition of the normal form such that the first element of the set is 0. \
The inversion of set A is given by (12-a) mod 12 for each element a of A. \
Thus 0=0, 1=11, 2=10, etc. The matrix of a set is generated as follows: The \
set is represented in the first row and column, and the values of each row \
and column cell are added and adjusted by mod 12. It illustrates \
combinatorality, which is satisfied when T(n)I has the same elements as the \
original set. T(n)I is the transpose at level n of the inverse of the \
original set. The integer n is equal to the number which appears in the \
matrix with a frequency equal to the cardinality of the original set. \
\>", "DetailNotes",
 CellChangeTimes->{{3.598139716545041*^9, 3.5981399921304483`*^9}, {
   3.598140038212921*^9, 3.5981401050677967`*^9}, 3.598409472409186*^9, {
   3.598410822999483*^9, 3.598410840705427*^9}, {3.59841104296824*^9, 
   3.59841106032819*^9}, {3.59841110259256*^9, 3.5984112764926662`*^9}},
 CellID->1903529055],

Cell["", "DetailNotes",
 CellChangeTimes->{{3.598139716545041*^9, 3.5981399921304483`*^9}, {
   3.598140038212921*^9, 3.5981401050677967`*^9}, 3.598409472409186*^9, {
   3.598410822999483*^9, 3.598410989801569*^9}, 3.598411040618067*^9},
 CellID->2089917626],

Cell["\<\
Snapshot 1: any set of cardinality 12 has an \"uninteresting\" interval \
vector with 12 of each interval class except ic6, and a prime ordering which \
forms the chromatic scale\
\>", "DetailNotes",
 CellChangeTimes->{{3.597970590100099*^9, 3.59797059123608*^9}, {
   3.5979709086334257`*^9, 3.5979709122571793`*^9}, {3.598022928245576*^9, 
   3.598022959000688*^9}, {3.598023210442999*^9, 3.598023251590479*^9}, {
   3.598023305139245*^9, 3.5980233550329523`*^9}, {3.598027883056415*^9, 
   3.598027908370932*^9}, 3.5980279507945433`*^9, {3.5980280060055113`*^9, 
   3.598028006519155*^9}, 3.598139693296276*^9},
 CellID->2011198299],

Cell["\<\
Snapshot 2: set 8-1 is combinatorial, as shown by the matrix\
\>", "DetailNotes",
 CellChangeTimes->{{3.597970918589136*^9, 3.5979709218493958`*^9}, {
  3.598023363593215*^9, 3.598023371055847*^9}, {3.598023402808558*^9, 
  3.598023413200783*^9}, {3.598119802320301*^9, 3.598119835869636*^9}, {
  3.598410761197673*^9, 3.598410772929113*^9}},
 CellID->1862654217],

Cell["\<\
Snapshot 3: set 4-19 is not combinatorial; there is no element in the matrix \
which appears the same number of times as the cardinality of the set\
\>", "DetailNotes",
 CellChangeTimes->{{3.597970918589136*^9, 3.597970923894907*^9}, {
   3.598023992549549*^9, 3.598024132825478*^9}, {3.598024168524527*^9, 
   3.5980241693169327`*^9}, {3.598027936581373*^9, 3.598027952474202*^9}, 
   3.5981405197959948`*^9, {3.598410789496455*^9, 3.598410811622517*^9}},
 CellID->1662629808],

Cell["References:", "DetailNotes",
 CellChangeTimes->{{3.597970613384563*^9, 3.597970670801124*^9}, {
  3.598028277285781*^9, 3.598028277548418*^9}, {3.598120025957385*^9, 
  3.5981200280264997`*^9}},
 CellID->9268641],

Cell[TextData[{
 "[1] A. Forte, ",
 StyleBox["The Structure of Atonal Music",
  FontSlant->"Italic"],
 ", New Haven: Yale University Press, 1973."
}], "DetailNotes",
 CellChangeTimes->{{3.597970613384563*^9, 3.597970670801124*^9}, {
  3.598028277285781*^9, 3.598028277548418*^9}, {3.598120025957385*^9, 
  3.598120028024909*^9}, {3.598411306155346*^9, 3.59841130648768*^9}},
 CellID->274987741],

Cell[TextData[ButtonBox["J. Tomlin, \"All About Set Theory\".",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.jaytomlin.com/music/settheory/help.html"], None},
 ButtonNote->
  "http://www.jaytomlin.com/music/settheory/help.html"]], "RelatedLinks",
 CellChangeTimes->{{3.5979704470839443`*^9, 3.597970447603512*^9}, {
   3.597970481266605*^9, 3.597970516369226*^9}, {3.597970699547559*^9, 
   3.597970707070834*^9}, 3.597970932228272*^9, {3.598028285303808*^9, 
   3.598028285652265*^9}, {3.598120036031489*^9, 3.598120037647607*^9}},
 CellID->1332838257]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.59797013140257*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["atonal", "SearchTerms",
 CellChangeTimes->{{3.597970074175808*^9, 3.5979700747410393`*^9}},
 CellID->1722129079],

Cell["music", "SearchTerms",
 CellChangeTimes->{{3.597970089855381*^9, 3.597970093829701*^9}},
 CellID->1286838408],

Cell["pitch-class", "SearchTerms",
 CellChangeTimes->{{3.59797009680892*^9, 3.597970098013488*^9}, {
  3.597970142779962*^9, 3.5979701443632927`*^9}},
 CellID->1902656173],

Cell["set theory", "SearchTerms",
 CellChangeTimes->{{3.597970145941781*^9, 3.597970146898879*^9}, {
  3.597970215912524*^9, 3.597970216893281*^9}},
 CellID->959727449],

Cell["second viennese school", "SearchTerms",
 CellChangeTimes->{{3.5980280923685904`*^9, 3.598028094867094*^9}},
 CellID->2136569288],

Cell["music theory", "SearchTerms",
 CellChangeTimes->{{3.598028099167754*^9, 3.5980281004586897`*^9}},
 CellID->1245961929]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["The 29 Tetrachords and Other Set Classes (Wolfram \
Demonstrations Project)",
 BaseStyle->"Hyperlink",
 ButtonData->{
   FrontEnd`FileName[{
    " http:", "", "demonstrations.wolfram.com", 
     "The29TetrachordsAndOtherSetClasses"}, CharacterEncoding -> "UTF-8"], 
   None}]], "RelatedLinks",
 CellChangeTimes->{{3.598028133291725*^9, 3.598028185094076*^9}},
 CellID->769098806]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: Didi Park", "Author",
 CellChangeTimes->{{3.597969717888184*^9, 3.5979697215092897`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1307, 802},
WindowMargins->{{54, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AutomaticAnimation"->{
  Cell[135111, 3280, 1464, 31, 29, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[136578, 3313, 908, 21, 29, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]},
 "CreateAndDeleteLocators"->{
  Cell[133252, 3229, 637, 15, 29, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "DragLocators"->{
  Cell[132909, 3216, 340, 11, 29, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "GamepadControls"->{
  Cell[134739, 3269, 369, 9, 29, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "ResizeImages"->{
  Cell[131873, 3187, 352, 9, 29, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[132228, 3198, 678, 16, 29, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "SliderZoom"->{
  Cell[133892, 3246, 844, 21, 29, "ControlSuggestions",
   CellTags->"SliderZoom"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AutomaticAnimation", 139467, 3405},
 {"BookmarkAnimation", 139585, 3408},
 {"CreateAndDeleteLocators", 139707, 3411},
 {"DragLocators", 139824, 3414},
 {"GamepadControls", 139933, 3417},
 {"ResizeImages", 140041, 3420},
 {"RotateAndZoomIn3D", 140151, 3423},
 {"SliderZoom", 140260, 3426}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 295, 4, 76, "DemoTitle"],
Cell[CellGroupData[{
Cell[899, 30, 33, 0, 275, "InitializationSection"],
Cell[935, 32, 15604, 467, 425, "Input",
 CellID->91615473]
}, Open  ]],
Cell[CellGroupData[{
Cell[16576, 504, 29, 0, 243, "ManipulateSection"],
Cell[CellGroupData[{
Cell[16630, 508, 18115, 415, 580, "Input",
 CellID->1670053378],
Cell[34748, 925, 17963, 420, 527, "Output",
 CellID->908692953]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52760, 1351, 36, 0, 181, "ManipulateCaptionSection"],
Cell[52799, 1353, 1995, 28, 71, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54831, 1386, 28, 0, 179, "ThumbnailSection"],
Cell[54862, 1388, 17979, 420, 527, "Output",
 CellID->298290030]
}, Open  ]],
Cell[CellGroupData[{
Cell[72878, 1813, 28, 0, 149, "SnapshotsSection"],
Cell[72909, 1815, 17990, 420, 526, "Output",
 CellID->1133702112],
Cell[90902, 2237, 17972, 420, 527, "Output",
 CellID->1656480200],
Cell[108877, 2659, 17957, 420, 527, "Output",
 CellID->484721692]
}, Open  ]],
Cell[CellGroupData[{
Cell[126871, 3084, 26, 0, 357, "DetailsSection"],
Cell[126900, 3086, 1933, 27, 135, "DetailNotes",
 CellID->1903529055],
Cell[128836, 3115, 258, 4, 23, "DetailNotes",
 CellID->2089917626],
Cell[129097, 3121, 645, 11, 23, "DetailNotes",
 CellID->2011198299],
Cell[129745, 3134, 373, 7, 23, "DetailNotes",
 CellID->1862654217],
Cell[130121, 3143, 487, 8, 23, "DetailNotes",
 CellID->1662629808],
Cell[130611, 3153, 218, 4, 23, "DetailNotes",
 CellID->9268641],
Cell[130832, 3159, 394, 9, 23, "DetailNotes",
 CellID->274987741],
Cell[131229, 3170, 567, 10, 23, "RelatedLinks",
 CellID->1332838257]
}, Open  ]],
Cell[CellGroupData[{
Cell[131833, 3185, 37, 0, 131, "ControlSuggestionsSection"],
Cell[131873, 3187, 352, 9, 29, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[132228, 3198, 678, 16, 29, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[132909, 3216, 340, 11, 29, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[133252, 3229, 637, 15, 29, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[133892, 3246, 844, 21, 29, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[134739, 3269, 369, 9, 29, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[135111, 3280, 1464, 31, 29, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[136578, 3313, 908, 21, 29, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137523, 3339, 30, 0, 165, "SearchTermsSection"],
Cell[137556, 3341, 118, 2, 23, "SearchTerms",
 CellID->1722129079],
Cell[137677, 3345, 115, 2, 23, "SearchTerms",
 CellID->1286838408],
Cell[137795, 3349, 171, 3, 23, "SearchTerms",
 CellID->1902656173],
Cell[137969, 3354, 168, 3, 23, "SearchTerms",
 CellID->959727449],
Cell[138140, 3359, 134, 2, 23, "SearchTerms",
 CellID->2136569288],
Cell[138277, 3363, 124, 2, 23, "SearchTerms",
 CellID->1245961929]
}, Open  ]],
Cell[CellGroupData[{
Cell[138438, 3370, 31, 0, 149, "RelatedLinksSection"],
Cell[138472, 3372, 404, 9, 23, "RelatedLinks",
 CellID->769098806]
}, Open  ]],
Cell[CellGroupData[{
Cell[138913, 3386, 25, 0, 149, "AuthorSection"],
Cell[138941, 3388, 111, 1, 23, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
