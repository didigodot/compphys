(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     91253,       2316]
NotebookOptionsPosition[     86732,       2176]
NotebookOutlinePosition[     88340,       2227]
CellTagsIndexPosition[     88012,       2215]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pitch-Class Set Orders and Forms", "DemoTitle",
 CellChangeTimes->{{3.597969536725177*^9, 3.597969543329103*^9}, {
   3.597969604830543*^9, 3.5979696060048532`*^9}, 3.597970193703745*^9, {
   3.597970363339325*^9, 3.597970364536953*^9}, {3.5979709715107403`*^9, 
   3.597970973627872*^9}}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GenerateSet", "[", 
   RowBox[{"notelen_", ",", "sl_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"row", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "sl"}], "]"}], ",", "sl"}], "]"}]}], "}"}], ",", 
    RowBox[{"Sound", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SoundNote", "[", 
        RowBox[{
         RowBox[{"row", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "notelen"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "row", "]"}]}], "}"}]}], "]"}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"PlaySet", "[", 
   RowBox[{"row_", ",", "notelen_"}], "]"}], ":=", 
  RowBox[{"Sound", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SoundNote", "[", 
      RowBox[{
       RowBox[{"row", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "notelen"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "row", "]"}]}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlaySetChord", "[", 
   RowBox[{"row_", ",", "notelen_"}], "]"}], ":=", 
  RowBox[{"Sound", "[", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SoundNote", "[", 
        RowBox[{
         RowBox[{"row", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"notelen", "/", "3"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "row", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"SoundNote", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"row", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "row", "]"}]}], "}"}]}], "]"}], ",", 
       "notelen"}], "]"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ButtonLabel", "[", 
   RowBox[{"ps_", ",", " ", "len_"}], "]"}], ":=", 
  RowBox[{"ImageCrop", "[", 
   RowBox[{
    RowBox[{"Rasterize", "[", 
     RowBox[{
      RowBox[{"PlaySet", "[", 
       RowBox[{"ps", ",", " ", "len"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"200", ",", "40"}], "}"}], ",", "Bottom"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"poss", "[", 
   RowBox[{"i_", ",", "tup_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], ">", "6"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], "<", "12"}]}], ",", 
    
    RowBox[{"Mod", "[", 
     RowBox[{"12", ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"tup", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{"tup", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], "\[NotEqual]", 
       "0"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"tup", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICSet", "[", "ps_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"poss", "[", 
         RowBox[{"i", ",", 
          RowBox[{"Subsets", "[", 
           RowBox[{"ps", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Subsets", "[", 
            RowBox[{"ps", ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
      "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Invert", "[", "ps_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"12", "-", 
      RowBox[{"ps", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "ps", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cperm", "[", "set_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"st", "=", 
      RowBox[{"Sort", "[", "set", "]"}]}], "}"}], ",", 
    RowBox[{"Delete", "[", 
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"st", ",", 
        RowBox[{"st", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ordered", "[", "cp_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[NotEqual]", "1"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"cp", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<", 
         RowBox[{"cp", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"cp", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "+", "12"}], ",", 
        RowBox[{"cp", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"cp", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "cp", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeCPerm", "[", "pc_", "]"}], ":=", 
  RowBox[{"ordered", "[", 
   RowBox[{"cperm", "[", "pc", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cperms", "[", "s_", "]"}], ":=", 
  RowBox[{"NestList", "[", 
   RowBox[{"makeCPerm", ",", "s", ",", 
    RowBox[{
     RowBox[{"Length", "[", "s", "]"}], "-", "1"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cut", "[", "s_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"z", "=", 
      RowBox[{"TakeWhile", "[", 
       RowBox[{"s", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
          RowBox[{"s", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalOrder", "[", 
   RowBox[{"s_", ",", " ", "k_"}], "]"}], ":=", 
  RowBox[{"cut", "[", 
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"s", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "k"}]}], "]"}], 
           "]"}], "-", 
          RowBox[{"s", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "<", 
       RowBox[{"#2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnOrder", "[", 
   RowBox[{"s_", ",", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Fold", "[", 
    RowBox[{"normalOrder", ",", 
     RowBox[{"cperms", "[", 
      RowBox[{"Sort", "[", "s", "]"}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "l"}], "]"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"primeForm", "[", "s_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", "=", 
      RowBox[{"fnOrder", "[", 
       RowBox[{"s", ",", " ", 
        RowBox[{"Length", "[", "s", "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"transpose", "[", 
     RowBox[{"t", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "*", 
       RowBox[{"t", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transpose", "[", 
   RowBox[{"s_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "+", "n"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverse", "[", "s_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"12", "-", 
       RowBox[{"s", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "12"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ForteNumber", "[", "s_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "s", "]"}], "<", "10"}], " ", "&&", 
     RowBox[{
      RowBox[{"Length", "[", "s", "]"}], ">", "2"}]}], ",", 
    RowBox[{"fortenums", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"fortenums", ",", "s"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], "]"}], 
    ",", "\"\<N/A\>\""}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598127384258222*^9, 3.598127422207321*^9}, {
  3.598127480208375*^9, 3.598127480591403*^9}, {3.59812764807874*^9, 
  3.598127659968856*^9}, {3.5981313609023123`*^9, 3.598131362146205*^9}, {
  3.598131552321146*^9, 3.598131553089566*^9}, {3.5981801310923223`*^9, 
  3.598180132089822*^9}, {3.59818336307191*^9, 3.598183363419608*^9}, {
  3.598183784122506*^9, 3.5981837843585443`*^9}, {3.5981840433458157`*^9, 
  3.598184043687381*^9}, {3.5981882151713333`*^9, 3.598188215381331*^9}, {
  3.59819161424576*^9, 3.5981916144804983`*^9}},
 CellID->1088626735]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Forte Number:\>\"", ",", "16"}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{"\"\<Cardinal Number: \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Length", "[", "PCSet", "]"}], "]"}]}], "]"}], ",", 
           "16"}], "]"}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{"\"\<Interval Vector: \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"ICSet", "[", "PCSet", "]"}], "]"}]}], "]"}], ",", 
           "16"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Panel", "[", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", "\"\<Original set\>\"", "]"}], ",", "14"}],
              "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"ToString", "[", "PCSet", "]"}], "]"}], ",", "12"}], 
             "]"}], ",", 
            RowBox[{"PlaySetChord", "[", 
             RowBox[{"PCSet", ",", "len"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"\"\<Transpose at level \>\"", "<>", 
                RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", "14"}], 
             "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"ToString", "[", 
                RowBox[{"transpose", "[", 
                 RowBox[{"PCSet", ",", "n"}], "]"}], "]"}], "]"}], ",", 
              "12"}], "]"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"Button", "[", 
             RowBox[{
              RowBox[{"ButtonLabel", "[", 
               RowBox[{
                RowBox[{"transpose", "[", 
                 RowBox[{"PCSet", ",", "n"}], "]"}], ",", "len"}], "]"}], ",",
               " ", 
              RowBox[{"EmitSound", "[", 
               RowBox[{"Sound", "@", 
                RowBox[{"PlaySet", "[", 
                 RowBox[{
                  RowBox[{"transpose", "[", 
                   RowBox[{"PCSet", ",", "n"}], "]"}], ",", " ", 
                  RowBox[{"len", "/", "3"}]}], "]"}]}], "]"}]}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", "\"\<Normal form\>\"", "]"}], ",", "14"}], 
             "]"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"ToString", "[", 
                RowBox[{"fnOrder", "[", 
                 RowBox[{"PCSet", ",", 
                  RowBox[{"Length", "[", "PCSet", "]"}]}], "]"}], "]"}], 
               "]"}], ",", "12"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Button", "[", 
             RowBox[{
              RowBox[{"ButtonLabel", "[", 
               RowBox[{
                RowBox[{"fnOrder", "[", 
                 RowBox[{"PCSet", ",", 
                  RowBox[{"Length", "[", "PCSet", "]"}]}], "]"}], ",", 
                "len"}], "]"}], ",", " ", 
              RowBox[{"EmitSound", "[", 
               RowBox[{"Sound", "@", 
                RowBox[{"PlaySet", "[", 
                 RowBox[{
                  RowBox[{"fnOrder", "[", 
                   RowBox[{"PCSet", ",", 
                    RowBox[{"Length", "[", "PCSet", "]"}]}], "]"}], ",", " ", 
                  
                  RowBox[{"len", "/", "3"}]}], "]"}]}], "]"}]}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", "\"\<Prime form\>\"", "]"}], ",", "14"}], 
             "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"ToString", "[", 
                RowBox[{"primeForm", "[", 
                 RowBox[{"Sort", "[", "PCSet", "]"}], "]"}], "]"}], "]"}], 
              ",", "12"}], "]"}], ",", 
            RowBox[{"Button", "[", 
             RowBox[{
              RowBox[{"ButtonLabel", "[", 
               RowBox[{
                RowBox[{"primeForm", "[", 
                 RowBox[{"Sort", "[", "PCSet", "]"}], "]"}], ",", "len"}], 
               "]"}], ",", " ", 
              RowBox[{"EmitSound", "[", 
               RowBox[{"Sound", "@", 
                RowBox[{"PlaySet", "[", 
                 RowBox[{
                  RowBox[{"primeForm", "[", 
                   RowBox[{"Sort", "[", "PCSet", "]"}], "]"}], ",", " ", 
                  RowBox[{"len", "/", "3"}]}], "]"}]}], "]"}]}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", "\"\<Inversion\>\"", "]"}], ",", "14"}], 
             "]"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"ToString", "[", 
                RowBox[{"Invert", "[", "PCSet", "]"}], "]"}], "]"}], ",", 
              "12"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Button", "[", 
             RowBox[{
              RowBox[{"ButtonLabel", "[", 
               RowBox[{
                RowBox[{"Invert", "[", "PCSet", "]"}], ",", "len"}], "]"}], 
              ",", " ", 
              RowBox[{"EmitSound", "[", 
               RowBox[{"Sound", "@", 
                RowBox[{"PlaySet", "[", 
                 RowBox[{
                  RowBox[{"Invert", "[", "PCSet", "]"}], ",", " ", 
                  RowBox[{"len", "/", "3"}]}], "]"}]}], "]"}]}], "]"}]}], 
           "}"}]}], "}"}], "\[IndentingNewLine]", "]"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PCSet", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "4", ",", "8"}], "}"}], ",", 
       "\"\<Set class\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "11"}], "]"}], ",", "1"}], "]"}], ",", " ", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "11"}], "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "7", ",", "2"}], "}"}], "\[Rule]", 
        "\"\<Berg - Altenberg Lieder Op.4/3\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "4", ",", "8"}], "}"}], "\[Rule]", 
        "\"\<Berg - Wozzeck\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "7", ",", "10"}], "}"}], "\[Rule]", 
        "\"\<Schoenberg - George Lieder Op.15/6\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "7", ",", "8", ",", "9"}], "}"}], 
        "\[Rule]", 
        "\"\<Webern - Five Movements for String Quartet Op.5/5\>\""}], ",", 
       " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "6", ",", "8", ",", "10", ",", "0"}], 
         "}"}], "\[Rule]", "\"\<Scriabin - Seventh Piano Sonata Op. 64\>\""}],
        ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "7", ",", "8", ",", "10", ",", "0", ",", "1", ",", "3", ",", "5"}], 
         "}"}], "\[Rule]", "\"\<Busoni - Second Sonatina\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",",
           "7"}], "}"}], "\[Rule]", 
        "\"\<Schoenberg - Six Short Piano Pieces Op. 19/6\>\""}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "7", ",",
           "9", ",", "10"}], "}"}], "\[Rule]", 
        "\"\<Stravinsky - Rite of Spring\>\""}], ",", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "11"}], "]"}], ",", "10"}], "]"}], ",", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "11"}], "]"}], ",", "11"}], "]"}], ",", 
       RowBox[{"k12", "=", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "11"}], "]"}], ",", "12"}], "]"}]}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", ",", "1.2", ",", "\"\<Note length\>\""}], "}"}], ",", 
     ".6", ",", "1.8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "\"\<Transpose level\>\""}], "}"}], ",", 
     "0", ",", "8", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
   RowBox[{"ContentSize", "\[Rule]", "610"}], ",", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598127503034134*^9, 3.598127509417556*^9}, 
   3.598127634767674*^9, {3.598127680357525*^9, 3.598127683296233*^9}, {
   3.5981313669719257`*^9, 3.598131401286187*^9}, {3.598131450451136*^9, 
   3.59813147631075*^9}, {3.598131545557784*^9, 3.5981315460920877`*^9}, 
   3.598140681981675*^9, {3.598180136538069*^9, 3.598180136810651*^9}, {
   3.598183366232328*^9, 3.598183366459779*^9}, {3.598183780351261*^9, 
   3.598183780741274*^9}, {3.5981840465815563`*^9, 3.598184046806972*^9}, {
   3.5981882100095463`*^9, 3.598188210437883*^9}, {3.5981916158337793`*^9, 
   3.598191616450992*^9}, {3.598297335006114*^9, 3.598297360601429*^9}, {
   3.598309956561871*^9, 3.598309957023033*^9}, {3.598310383992049*^9, 
   3.598310387121841*^9}, {3.598311768081547*^9, 3.598311769095998*^9}, {
   3.598312158055327*^9, 3.598312174079818*^9}},
 CellID->1338191265]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
Pitch-class set theory emerged during the 20th century as a manner of \
analyzing the atonal compositions of various composers. A pitch-class set is \
a subset of the pitches of the chromatic scale, represented by integers 0 \
through 11. Important information about each set, including the Forte number \
(an identifier), cardinal number (number of elements in a set), and interval \
vector (interval content of a set) are shown, as well as several important \
orderings and transformations of the set: the transpose, normal form, prime \
form, and inversion. The definitions of these orderings and transformations \
are given in the \"details\" section. Many of the set classes in this \
demonstration are labeled by a musical composition in which they occur. \
\>", "ManipulateCaption",
 CellChangeTimes->{{3.598022559634985*^9, 3.598022560405628*^9}, {
   3.598119973751587*^9, 3.598119978225333*^9}, {3.598120657406364*^9, 
   3.5981207051019297`*^9}, {3.598126756449658*^9, 3.598126766918202*^9}, 
   3.5981270363715687`*^9, {3.598127883105321*^9, 3.598127883612762*^9}, {
   3.598127956999175*^9, 3.598128001566305*^9}, {3.598128417401492*^9, 
   3.5981284220793867`*^9}, {3.598129105076548*^9, 3.5981291103066263`*^9}, {
   3.598129246542047*^9, 3.5981292469482117`*^9}, {3.598130850656769*^9, 
   3.598130852430238*^9}, {3.598131638952135*^9, 3.598131659216423*^9}, {
   3.5981316972548656`*^9, 3.598131734700975*^9}, {3.5981317753032837`*^9, 
   3.598131897518435*^9}, {3.598132006699044*^9, 3.598132106373397*^9}, {
   3.598132191591548*^9, 3.598132229851344*^9}, {3.598132280099966*^9, 
   3.598132450157406*^9}, {3.598132526074469*^9, 3.5981326104606047`*^9}, {
   3.5981389762848587`*^9, 3.598139014514536*^9}, {3.598139054556385*^9, 
   3.59813909044941*^9}, {3.598139245722994*^9, 3.598139257246442*^9}, {
   3.598139568433522*^9, 3.5981396012323923`*^9}, {3.598140153004883*^9, 
   3.5981404486616373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`len$$ = 1.2, $CellContext`n$$ = 
    0, $CellContext`PCSet$$ = {0, 1, 2, 3, 5, 6, 7, 9, 10}, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`PCSet$$], {0, 1, 4, 8}, "Set class"}, {{1}, {6, 
       9}, {1, 7, 2} -> "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
       "Berg - Wozzeck", {3, 4, 7, 10} -> 
       "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
       "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 10, 
        0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 1, 3, 
        5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
       "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 7, 
        9, 10} -> "Stravinsky - Rite of Spring", {11, 10, 7, 1, 0, 3, 5, 4, 9,
        8}, {7, 2, 1, 11, 10, 9, 4, 6, 5, 8, 3}, {7, 2, 6, 0, 10, 4, 11, 1, 9,
        8, 3, 5}}}, {{
       Hold[$CellContext`len$$], 1.2, "Note length"}, 0.6, 1.8}, {{
       Hold[$CellContext`n$$], 0, "Transpose level"}, 0, 8, 1}}, 
    Typeset`size$$ = {531.701171875, {317., 29.15625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`PCSet$6821$$ = False, $CellContext`len$6822$$ = 
    0, $CellContext`n$6823$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`len$$ = 1.2, $CellContext`n$$ = 
        0, $CellContext`PCSet$$ = {0, 1, 4, 8}}, "ControllerVariables" :> {
        Hold[$CellContext`PCSet$$, $CellContext`PCSet$6821$$, False], 
        Hold[$CellContext`len$$, $CellContext`len$6822$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$6823$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         Column[{
           Style[
            Text["Forte Number:", 16]], 
           Style[
            Text[
             StringJoin["Cardinal Number: ", 
              ToString[
               Length[$CellContext`PCSet$$]]]], 16], 
           Style[
            Text[
             StringJoin["Interval Vector: ", 
              ToString[
               $CellContext`ICSet[$CellContext`PCSet$$]]]], 16]}], 
         Spacer[10], 
         Panel[
          Grid[{{
             Style[
              Text["Original set"], 14], 
             Style[
              Text[
               ToString[$CellContext`PCSet$$]], 12], 
             $CellContext`PlaySetChord[$CellContext`PCSet$$, \
$CellContext`len$$]}, {
             Style[
              Text[
               StringJoin["Transpose at level ", 
                ToString[$CellContext`n$$]]], 14], 
             Style[
              Text[
               ToString[
                $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Normal form"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`fnOrder[$CellContext`PCSet$$, 
                 Length[$CellContext`PCSet$$]]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`fnOrder[$CellContext`PCSet$$, 
                Length[$CellContext`PCSet$$]], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`fnOrder[$CellContext`PCSet$$, 
                  Length[$CellContext`PCSet$$]], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Prime form"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`primeForm[
                 Sort[$CellContext`PCSet$$]]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`primeForm[
                Sort[$CellContext`PCSet$$]], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`primeForm[
                  Sort[$CellContext`PCSet$$]], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Inversion"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`Invert[$CellContext`PCSet$$]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`Invert[$CellContext`PCSet$$], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`Invert[$CellContext`PCSet$$], \
$CellContext`len$$/3]]]]}}]]}], 
      "Specifications" :> {{{$CellContext`PCSet$$, {0, 1, 4, 8}, 
          "Set class"}, {{1}, {6, 9}, {1, 7, 2} -> 
          "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
          "Berg - Wozzeck", {3, 4, 7, 10} -> 
          "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
          "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 
           10, 0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 
           1, 3, 5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
          "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 
           7, 9, 10} -> "Stravinsky - Rite of Spring", {11, 10, 7, 1, 0, 3, 5,
           4, 9, 8}, {7, 2, 1, 11, 10, 9, 4, 6, 5, 8, 3}, {7, 2, 6, 0, 10, 4, 
          11, 1, 9, 8, 3, 5}}}, {{$CellContext`len$$, 1.2, "Note length"}, 
         0.6, 1.8}, {{$CellContext`n$$, 0, "Transpose level"}, 0, 8, 1}}, 
      "Options" :> {ContinuousAction -> False, ContentSize -> 610}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{624., {241., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ICSet[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Count[
          Table[
           $CellContext`poss[$CellContext`i, 
            Subsets[$CellContext`ps, {2}]], {$CellContext`i, 1, 
            Length[
             
             Subsets[$CellContext`ps, {
              2}]]}], $CellContext`j], {$CellContext`j, 1, 
          6}], $CellContext`poss[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`tup, 
          Blank[]]] := If[
         And[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] > 6, 
          Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] < 12], 
         Mod[12, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 1]]], 
         If[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] != 0, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 
            1]]]], $CellContext`PlaySetChord[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Append[
          Table[
           SoundNote[
            Part[$CellContext`row, $CellContext`i], $CellContext`notelen/
            3], {$CellContext`i, 1, 
            Length[$CellContext`row]}], 
          SoundNote[
           Table[
            Part[$CellContext`row, $CellContext`i], {$CellContext`i, 1, 
             
             Length[$CellContext`row]}], $CellContext`notelen]]], \
$CellContext`transpose[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Table[Part[$CellContext`s, $CellContext`i] + $CellContext`n, \
{$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 
         Pattern[$CellContext`len, 
          Blank[]]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, $CellContext`len], ImageSize -> 
          200], {200, 40}, Bottom], $CellContext`PlaySet[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Table[
          SoundNote[
           
           Part[$CellContext`row, $CellContext`i], $CellContext`notelen], \
{$CellContext`i, 1, 
           Length[$CellContext`row]}]], $CellContext`fnOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Part[
         Fold[$CellContext`normalOrder, 
          $CellContext`cperms[
           Sort[$CellContext`s]], 
          Range[0, $CellContext`l]], 1], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := $CellContext`cut[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, Length[
                Part[$CellContext`s, $CellContext`i]] - $CellContext`k] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < 
          Part[#2, 2]& ]], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, 
              Length[$CellContext`s]] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < Part[#2, 2]& ], 1, 
         1], $CellContext`cut[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`z = 
          TakeWhile[$CellContext`s, Part[#, 2] == 
            Part[$CellContext`s, 1, 2]& ]}, 
         Table[
          Part[$CellContext`z, $CellContext`i, 1], {$CellContext`i, 1, 
           Length[$CellContext`z]}]], $CellContext`cperms[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       NestList[$CellContext`makeCPerm, $CellContext`s, 
         Length[$CellContext`s] - 1], $CellContext`makeCPerm[
         Pattern[$CellContext`pc, 
          Blank[]]] := $CellContext`ordered[
         $CellContext`cperm[$CellContext`pc]], $CellContext`ordered[
         Pattern[$CellContext`cp, 
          Blank[]]] := Table[
         If[$CellContext`i != 1, 
          If[
          Part[$CellContext`cp, $CellContext`i] < Part[$CellContext`cp, 1], 
           Part[$CellContext`cp, $CellContext`i] + 12, 
           Part[$CellContext`cp, $CellContext`i]], 
          Part[$CellContext`cp, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`cp]}], $CellContext`cperm[
         Pattern[$CellContext`set, 
          Blank[]]] := Module[{$CellContext`st = Sort[$CellContext`set]}, 
         Delete[
          Append[$CellContext`st, 
           Part[$CellContext`st, 1]], 1]], $CellContext`primeForm[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`t = $CellContext`fnOrder[$CellContext`s, 
            Length[$CellContext`s]]}, 
         $CellContext`transpose[$CellContext`t, -
          Part[$CellContext`t, 1]]], $CellContext`Invert[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Abs[
         12 - Part[$CellContext`ps, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`ps]}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.598312178807145*^9},
 CellID->594605143]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`len$$ = 1.2, $CellContext`n$$ = 
    0, $CellContext`PCSet$$ = {7, 2, 6, 0, 10, 4, 11, 1, 9, 8, 3, 5}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`PCSet$$], {0, 1, 4, 8}, "Set class"}, {{1}, {6, 
       9}, {1, 7, 2} -> "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
       "Berg - Wozzeck", {3, 4, 7, 10} -> 
       "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
       "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 10, 
        0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 1, 3, 
        5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
       "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 7, 
        9, 10} -> "Stravinsky - Rite of Spring", {11, 10, 7, 1, 0, 3, 5, 4, 9,
        8}, {7, 2, 1, 11, 10, 9, 4, 6, 5, 8, 3}, {7, 2, 6, 0, 10, 4, 11, 1, 9,
        8, 3, 5}}}, {{
       Hold[$CellContext`len$$], 1.2, "Note length"}, 0.6, 1.8}, {{
       Hold[$CellContext`n$$], 0, "Transpose level"}, 0, 8, 1}}, 
    Typeset`size$$ = {567.701171875, {317., 29.15625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`PCSet$6821$$ = False, $CellContext`len$6822$$ = 
    0, $CellContext`n$6823$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`len$$ = 1.2, $CellContext`n$$ = 
        0, $CellContext`PCSet$$ = {0, 1, 4, 8}}, "ControllerVariables" :> {
        Hold[$CellContext`PCSet$$, $CellContext`PCSet$6821$$, False], 
        Hold[$CellContext`len$$, $CellContext`len$6822$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$6823$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         Column[{
           Style[
            Text["Forte Number:", 16]], 
           Style[
            Text[
             StringJoin["Cardinal Number: ", 
              ToString[
               Length[$CellContext`PCSet$$]]]], 16], 
           Style[
            Text[
             StringJoin["Interval Vector: ", 
              ToString[
               $CellContext`ICSet[$CellContext`PCSet$$]]]], 16]}], 
         Spacer[10], 
         Panel[
          Grid[{{
             Style[
              Text["Original set"], 14], 
             Style[
              Text[
               ToString[$CellContext`PCSet$$]], 12], 
             $CellContext`PlaySetChord[$CellContext`PCSet$$, \
$CellContext`len$$]}, {
             Style[
              Text[
               StringJoin["Transpose at level ", 
                ToString[$CellContext`n$$]]], 14], 
             Style[
              Text[
               ToString[
                $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Normal form"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`fnOrder[$CellContext`PCSet$$, 
                 Length[$CellContext`PCSet$$]]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`fnOrder[$CellContext`PCSet$$, 
                Length[$CellContext`PCSet$$]], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`fnOrder[$CellContext`PCSet$$, 
                  Length[$CellContext`PCSet$$]], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Prime form"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`primeForm[
                 Sort[$CellContext`PCSet$$]]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`primeForm[
                Sort[$CellContext`PCSet$$]], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`primeForm[
                  Sort[$CellContext`PCSet$$]], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Inversion"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`Invert[$CellContext`PCSet$$]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`Invert[$CellContext`PCSet$$], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`Invert[$CellContext`PCSet$$], \
$CellContext`len$$/3]]]]}}]]}], 
      "Specifications" :> {{{$CellContext`PCSet$$, {0, 1, 4, 8}, 
          "Set class"}, {{1}, {6, 9}, {1, 7, 2} -> 
          "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
          "Berg - Wozzeck", {3, 4, 7, 10} -> 
          "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
          "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 
           10, 0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 
           1, 3, 5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
          "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 
           7, 9, 10} -> "Stravinsky - Rite of Spring", {11, 10, 7, 1, 0, 3, 5,
           4, 9, 8}, {7, 2, 1, 11, 10, 9, 4, 6, 5, 8, 3}, {7, 2, 6, 0, 10, 4, 
          11, 1, 9, 8, 3, 5}}}, {{$CellContext`len$$, 1.2, "Note length"}, 
         0.6, 1.8}, {{$CellContext`n$$, 0, "Transpose level"}, 0, 8, 1}}, 
      "Options" :> {ContinuousAction -> False, ContentSize -> 610}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{624., {240., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ICSet[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Count[
          Table[
           $CellContext`poss[$CellContext`i, 
            Subsets[$CellContext`ps, {2}]], {$CellContext`i, 1, 
            Length[
             
             Subsets[$CellContext`ps, {
              2}]]}], $CellContext`j], {$CellContext`j, 1, 
          6}], $CellContext`poss[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`tup, 
          Blank[]]] := If[
         And[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] > 6, 
          Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] < 12], 
         Mod[12, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 1]]], 
         If[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] != 0, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 
            1]]]], $CellContext`PlaySetChord[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Append[
          Table[
           SoundNote[
            Part[$CellContext`row, $CellContext`i], $CellContext`notelen/
            3], {$CellContext`i, 1, 
            Length[$CellContext`row]}], 
          SoundNote[
           Table[
            Part[$CellContext`row, $CellContext`i], {$CellContext`i, 1, 
             
             Length[$CellContext`row]}], $CellContext`notelen]]], \
$CellContext`transpose[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Table[Part[$CellContext`s, $CellContext`i] + $CellContext`n, \
{$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 
         Pattern[$CellContext`len, 
          Blank[]]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, $CellContext`len], ImageSize -> 
          200], {200, 40}, Bottom], $CellContext`PlaySet[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Table[
          SoundNote[
           
           Part[$CellContext`row, $CellContext`i], $CellContext`notelen], \
{$CellContext`i, 1, 
           Length[$CellContext`row]}]], $CellContext`fnOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Part[
         Fold[$CellContext`normalOrder, 
          $CellContext`cperms[
           Sort[$CellContext`s]], 
          Range[0, $CellContext`l]], 1], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := $CellContext`cut[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, Length[
                Part[$CellContext`s, $CellContext`i]] - $CellContext`k] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < 
          Part[#2, 2]& ]], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, 
              Length[$CellContext`s]] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < Part[#2, 2]& ], 1, 
         1], $CellContext`cut[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`z = 
          TakeWhile[$CellContext`s, Part[#, 2] == 
            Part[$CellContext`s, 1, 2]& ]}, 
         Table[
          Part[$CellContext`z, $CellContext`i, 1], {$CellContext`i, 1, 
           Length[$CellContext`z]}]], $CellContext`cperms[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       NestList[$CellContext`makeCPerm, $CellContext`s, 
         Length[$CellContext`s] - 1], $CellContext`makeCPerm[
         Pattern[$CellContext`pc, 
          Blank[]]] := $CellContext`ordered[
         $CellContext`cperm[$CellContext`pc]], $CellContext`ordered[
         Pattern[$CellContext`cp, 
          Blank[]]] := Table[
         If[$CellContext`i != 1, 
          If[
          Part[$CellContext`cp, $CellContext`i] < Part[$CellContext`cp, 1], 
           Part[$CellContext`cp, $CellContext`i] + 12, 
           Part[$CellContext`cp, $CellContext`i]], 
          Part[$CellContext`cp, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`cp]}], $CellContext`cperm[
         Pattern[$CellContext`set, 
          Blank[]]] := Module[{$CellContext`st = Sort[$CellContext`set]}, 
         Delete[
          Append[$CellContext`st, 
           Part[$CellContext`st, 1]], 1]], $CellContext`primeForm[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`t = $CellContext`fnOrder[$CellContext`s, 
            Length[$CellContext`s]]}, 
         $CellContext`transpose[$CellContext`t, -
          Part[$CellContext`t, 1]]], $CellContext`Invert[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Abs[
         12 - Part[$CellContext`ps, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`ps]}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.598312178807145*^9},
 CellID->599816725],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`len$$ = 1.2, $CellContext`n$$ = 
    0, $CellContext`PCSet$$ = {7, 8, 10, 0, 1, 3, 5}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`PCSet$$], {0, 1, 4, 8}, "Set class"}, {{1}, {6, 
       9}, {1, 7, 2} -> "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
       "Berg - Wozzeck", {3, 4, 7, 10} -> 
       "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
       "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 10, 
        0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 1, 3, 
        5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
       "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 7, 
        9, 10} -> "Stravinsky - Rite of Spring", {11, 10, 7, 1, 0, 3, 5, 4, 9,
        8}, {7, 2, 1, 11, 10, 9, 4, 6, 5, 8, 3}, {7, 2, 6, 0, 10, 4, 11, 1, 9,
        8, 3, 5}}}, {{
       Hold[$CellContext`len$$], 1.2, "Note length"}, 0.6, 1.8}, {{
       Hold[$CellContext`n$$], 0, "Transpose level"}, 0, 8, 1}}, 
    Typeset`size$$ = {519.701171875, {317., 29.15625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`PCSet$6821$$ = False, $CellContext`len$6822$$ = 
    0, $CellContext`n$6823$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`len$$ = 1.2, $CellContext`n$$ = 
        0, $CellContext`PCSet$$ = {0, 1, 4, 8}}, "ControllerVariables" :> {
        Hold[$CellContext`PCSet$$, $CellContext`PCSet$6821$$, False], 
        Hold[$CellContext`len$$, $CellContext`len$6822$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$6823$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         Column[{
           Style[
            Text["Forte Number:", 16]], 
           Style[
            Text[
             StringJoin["Cardinal Number: ", 
              ToString[
               Length[$CellContext`PCSet$$]]]], 16], 
           Style[
            Text[
             StringJoin["Interval Vector: ", 
              ToString[
               $CellContext`ICSet[$CellContext`PCSet$$]]]], 16]}], 
         Spacer[10], 
         Panel[
          Grid[{{
             Style[
              Text["Original set"], 14], 
             Style[
              Text[
               ToString[$CellContext`PCSet$$]], 12], 
             $CellContext`PlaySetChord[$CellContext`PCSet$$, \
$CellContext`len$$]}, {
             Style[
              Text[
               StringJoin["Transpose at level ", 
                ToString[$CellContext`n$$]]], 14], 
             Style[
              Text[
               ToString[
                $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Normal form"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`fnOrder[$CellContext`PCSet$$, 
                 Length[$CellContext`PCSet$$]]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`fnOrder[$CellContext`PCSet$$, 
                Length[$CellContext`PCSet$$]], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`fnOrder[$CellContext`PCSet$$, 
                  Length[$CellContext`PCSet$$]], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Prime form"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`primeForm[
                 Sort[$CellContext`PCSet$$]]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`primeForm[
                Sort[$CellContext`PCSet$$]], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`primeForm[
                  Sort[$CellContext`PCSet$$]], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Inversion"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`Invert[$CellContext`PCSet$$]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`Invert[$CellContext`PCSet$$], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`Invert[$CellContext`PCSet$$], \
$CellContext`len$$/3]]]]}}]]}], 
      "Specifications" :> {{{$CellContext`PCSet$$, {0, 1, 4, 8}, 
          "Set class"}, {{1}, {6, 9}, {1, 7, 2} -> 
          "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
          "Berg - Wozzeck", {3, 4, 7, 10} -> 
          "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
          "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 
           10, 0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 
           1, 3, 5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
          "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 
           7, 9, 10} -> "Stravinsky - Rite of Spring", {11, 10, 7, 1, 0, 3, 5,
           4, 9, 8}, {7, 2, 1, 11, 10, 9, 4, 6, 5, 8, 3}, {7, 2, 6, 0, 10, 4, 
          11, 1, 9, 8, 3, 5}}}, {{$CellContext`len$$, 1.2, "Note length"}, 
         0.6, 1.8}, {{$CellContext`n$$, 0, "Transpose level"}, 0, 8, 1}}, 
      "Options" :> {ContinuousAction -> False, ContentSize -> 610}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{624., {240., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ICSet[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Count[
          Table[
           $CellContext`poss[$CellContext`i, 
            Subsets[$CellContext`ps, {2}]], {$CellContext`i, 1, 
            Length[
             
             Subsets[$CellContext`ps, {
              2}]]}], $CellContext`j], {$CellContext`j, 1, 
          6}], $CellContext`poss[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`tup, 
          Blank[]]] := If[
         And[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] > 6, 
          Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] < 12], 
         Mod[12, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 1]]], 
         If[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] != 0, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 
            1]]]], $CellContext`PlaySetChord[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Append[
          Table[
           SoundNote[
            Part[$CellContext`row, $CellContext`i], $CellContext`notelen/
            3], {$CellContext`i, 1, 
            Length[$CellContext`row]}], 
          SoundNote[
           Table[
            Part[$CellContext`row, $CellContext`i], {$CellContext`i, 1, 
             
             Length[$CellContext`row]}], $CellContext`notelen]]], \
$CellContext`transpose[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Table[Part[$CellContext`s, $CellContext`i] + $CellContext`n, \
{$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 
         Pattern[$CellContext`len, 
          Blank[]]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, $CellContext`len], ImageSize -> 
          200], {200, 40}, Bottom], $CellContext`PlaySet[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Table[
          SoundNote[
           
           Part[$CellContext`row, $CellContext`i], $CellContext`notelen], \
{$CellContext`i, 1, 
           Length[$CellContext`row]}]], $CellContext`fnOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Part[
         Fold[$CellContext`normalOrder, 
          $CellContext`cperms[
           Sort[$CellContext`s]], 
          Range[0, $CellContext`l]], 1], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := $CellContext`cut[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, Length[
                Part[$CellContext`s, $CellContext`i]] - $CellContext`k] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < 
          Part[#2, 2]& ]], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, 
              Length[$CellContext`s]] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < Part[#2, 2]& ], 1, 
         1], $CellContext`cut[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`z = 
          TakeWhile[$CellContext`s, Part[#, 2] == 
            Part[$CellContext`s, 1, 2]& ]}, 
         Table[
          Part[$CellContext`z, $CellContext`i, 1], {$CellContext`i, 1, 
           Length[$CellContext`z]}]], $CellContext`cperms[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       NestList[$CellContext`makeCPerm, $CellContext`s, 
         Length[$CellContext`s] - 1], $CellContext`makeCPerm[
         Pattern[$CellContext`pc, 
          Blank[]]] := $CellContext`ordered[
         $CellContext`cperm[$CellContext`pc]], $CellContext`ordered[
         Pattern[$CellContext`cp, 
          Blank[]]] := Table[
         If[$CellContext`i != 1, 
          If[
          Part[$CellContext`cp, $CellContext`i] < Part[$CellContext`cp, 1], 
           Part[$CellContext`cp, $CellContext`i] + 12, 
           Part[$CellContext`cp, $CellContext`i]], 
          Part[$CellContext`cp, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`cp]}], $CellContext`cperm[
         Pattern[$CellContext`set, 
          Blank[]]] := Module[{$CellContext`st = Sort[$CellContext`set]}, 
         Delete[
          Append[$CellContext`st, 
           Part[$CellContext`st, 1]], 1]], $CellContext`primeForm[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`t = $CellContext`fnOrder[$CellContext`s, 
            Length[$CellContext`s]]}, 
         $CellContext`transpose[$CellContext`t, -
          Part[$CellContext`t, 1]]], $CellContext`Invert[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Abs[
         12 - Part[$CellContext`ps, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`ps]}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.598312178807145*^9},
 CellID->639472970],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`len$$ = 1.2, $CellContext`n$$ = 
    0, $CellContext`PCSet$$ = {0, 1, 4, 8}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`PCSet$$], {0, 1, 4, 8}, "Set class"}, {{1}, {6, 
       9}, {1, 7, 2} -> "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
       "Berg - Wozzeck", {3, 4, 7, 10} -> 
       "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
       "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 10, 
        0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 1, 3, 
        5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
       "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 7, 
        9, 10} -> "Stravinsky - Rite of Spring", {11, 10, 7, 1, 0, 3, 5, 4, 9,
        8}, {7, 2, 1, 11, 10, 9, 4, 6, 5, 8, 3}, {7, 2, 6, 0, 10, 4, 11, 1, 9,
        8, 3, 5}}}, {{
       Hold[$CellContext`len$$], 1.2, "Note length"}, 0.6, 1.8}, {{
       Hold[$CellContext`n$$], 0, "Transpose level"}, 0, 8, 1}}, 
    Typeset`size$$ = {465.701171875, {317., 29.15625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`PCSet$6821$$ = False, $CellContext`len$6822$$ = 
    0, $CellContext`n$6823$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`len$$ = 1.2, $CellContext`n$$ = 
        0, $CellContext`PCSet$$ = {0, 1, 4, 8}}, "ControllerVariables" :> {
        Hold[$CellContext`PCSet$$, $CellContext`PCSet$6821$$, False], 
        Hold[$CellContext`len$$, $CellContext`len$6822$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$6823$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         Column[{
           Style[
            Text["Forte Number:", 16]], 
           Style[
            Text[
             StringJoin["Cardinal Number: ", 
              ToString[
               Length[$CellContext`PCSet$$]]]], 16], 
           Style[
            Text[
             StringJoin["Interval Vector: ", 
              ToString[
               $CellContext`ICSet[$CellContext`PCSet$$]]]], 16]}], 
         Spacer[10], 
         Panel[
          Grid[{{
             Style[
              Text["Original set"], 14], 
             Style[
              Text[
               ToString[$CellContext`PCSet$$]], 12], 
             $CellContext`PlaySetChord[$CellContext`PCSet$$, \
$CellContext`len$$]}, {
             Style[
              Text[
               StringJoin["Transpose at level ", 
                ToString[$CellContext`n$$]]], 14], 
             Style[
              Text[
               ToString[
                $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`transpose[$CellContext`PCSet$$, \
$CellContext`n$$], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Normal form"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`fnOrder[$CellContext`PCSet$$, 
                 Length[$CellContext`PCSet$$]]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`fnOrder[$CellContext`PCSet$$, 
                Length[$CellContext`PCSet$$]], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`fnOrder[$CellContext`PCSet$$, 
                  Length[$CellContext`PCSet$$]], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Prime form"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`primeForm[
                 Sort[$CellContext`PCSet$$]]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`primeForm[
                Sort[$CellContext`PCSet$$]], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`primeForm[
                  Sort[$CellContext`PCSet$$]], $CellContext`len$$/3]]]]}, {
             Style[
              Text["Inversion"], 14], 
             Style[
              Text[
               ToString[
                $CellContext`Invert[$CellContext`PCSet$$]]], 12], 
             Button[
              $CellContext`ButtonLabel[
               $CellContext`Invert[$CellContext`PCSet$$], $CellContext`len$$], 
              EmitSound[
               Sound[
                $CellContext`PlaySet[
                 $CellContext`Invert[$CellContext`PCSet$$], \
$CellContext`len$$/3]]]]}}]]}], 
      "Specifications" :> {{{$CellContext`PCSet$$, {0, 1, 4, 8}, 
          "Set class"}, {{1}, {6, 9}, {1, 7, 2} -> 
          "Berg - Altenberg Lieder Op.4/3", {0, 1, 4, 8} -> 
          "Berg - Wozzeck", {3, 4, 7, 10} -> 
          "Schoenberg - George Lieder Op.15/6", {2, 3, 7, 8, 9} -> 
          "Webern - Five Movements for String Quartet Op.5/5", {3, 4, 6, 8, 
           10, 0} -> "Scriabin - Seventh Piano Sonata Op. 64", {7, 8, 10, 0, 
           1, 3, 5} -> "Busoni - Second Sonatina", {0, 1, 2, 3, 4, 5, 6, 7} -> 
          "Schoenberg - Six Short Piano Pieces Op. 19/6", {0, 1, 2, 3, 5, 6, 
           7, 9, 10} -> "Stravinsky - Rite of Spring", {11, 10, 7, 1, 0, 3, 5,
           4, 9, 8}, {7, 2, 1, 11, 10, 9, 4, 6, 5, 8, 3}, {7, 2, 6, 0, 10, 4, 
          11, 1, 9, 8, 3, 5}}}, {{$CellContext`len$$, 1.2, "Note length"}, 
         0.6, 1.8}, {{$CellContext`n$$, 0, "Transpose level"}, 0, 8, 1}}, 
      "Options" :> {ContinuousAction -> False, ContentSize -> 610}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{624., {241., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ICSet[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Count[
          Table[
           $CellContext`poss[$CellContext`i, 
            Subsets[$CellContext`ps, {2}]], {$CellContext`i, 1, 
            Length[
             
             Subsets[$CellContext`ps, {
              2}]]}], $CellContext`j], {$CellContext`j, 1, 
          6}], $CellContext`poss[
         Pattern[$CellContext`i, 
          Blank[]], 
         Pattern[$CellContext`tup, 
          Blank[]]] := If[
         And[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] > 6, 
          Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] < 12], 
         Mod[12, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 1]]], 
         If[
         Abs[Part[$CellContext`tup, $CellContext`i, 2] - 
            Part[$CellContext`tup, $CellContext`i, 1]] != 0, 
          Abs[
          Part[$CellContext`tup, $CellContext`i, 2] - 
           Part[$CellContext`tup, $CellContext`i, 
            1]]]], $CellContext`PlaySetChord[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Append[
          Table[
           SoundNote[
            Part[$CellContext`row, $CellContext`i], $CellContext`notelen/
            3], {$CellContext`i, 1, 
            Length[$CellContext`row]}], 
          SoundNote[
           Table[
            Part[$CellContext`row, $CellContext`i], {$CellContext`i, 1, 
             
             Length[$CellContext`row]}], $CellContext`notelen]]], \
$CellContext`transpose[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Table[Part[$CellContext`s, $CellContext`i] + $CellContext`n, \
{$CellContext`i, 1, 
          Length[$CellContext`s]}], $CellContext`ButtonLabel[
         Pattern[$CellContext`ps, 
          Blank[]], 
         Pattern[$CellContext`len, 
          Blank[]]] := ImageCrop[
         Rasterize[
          $CellContext`PlaySet[$CellContext`ps, $CellContext`len], ImageSize -> 
          200], {200, 40}, Bottom], $CellContext`PlaySet[
         Pattern[$CellContext`row, 
          Blank[]], 
         Pattern[$CellContext`notelen, 
          Blank[]]] := Sound[
         Table[
          SoundNote[
           
           Part[$CellContext`row, $CellContext`i], $CellContext`notelen], \
{$CellContext`i, 1, 
           Length[$CellContext`row]}]], $CellContext`fnOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`l, 
          Blank[]]] := Part[
         Fold[$CellContext`normalOrder, 
          $CellContext`cperms[
           Sort[$CellContext`s]], 
          Range[0, $CellContext`l]], 1], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := $CellContext`cut[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, Length[
                Part[$CellContext`s, $CellContext`i]] - $CellContext`k] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < 
          Part[#2, 2]& ]], $CellContext`normalOrder[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[
         Sort[
          Table[{
            Part[$CellContext`s, $CellContext`i], 
            Part[$CellContext`s, $CellContext`i, 
              Length[$CellContext`s]] - 
            Part[$CellContext`s, $CellContext`i, 1]}, {$CellContext`i, 1, 
            Length[$CellContext`s]}], Part[#, 2] < Part[#2, 2]& ], 1, 
         1], $CellContext`cut[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`z = 
          TakeWhile[$CellContext`s, Part[#, 2] == 
            Part[$CellContext`s, 1, 2]& ]}, 
         Table[
          Part[$CellContext`z, $CellContext`i, 1], {$CellContext`i, 1, 
           Length[$CellContext`z]}]], $CellContext`cperms[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       NestList[$CellContext`makeCPerm, $CellContext`s, 
         Length[$CellContext`s] - 1], $CellContext`makeCPerm[
         Pattern[$CellContext`pc, 
          Blank[]]] := $CellContext`ordered[
         $CellContext`cperm[$CellContext`pc]], $CellContext`ordered[
         Pattern[$CellContext`cp, 
          Blank[]]] := Table[
         If[$CellContext`i != 1, 
          If[
          Part[$CellContext`cp, $CellContext`i] < Part[$CellContext`cp, 1], 
           Part[$CellContext`cp, $CellContext`i] + 12, 
           Part[$CellContext`cp, $CellContext`i]], 
          Part[$CellContext`cp, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`cp]}], $CellContext`cperm[
         Pattern[$CellContext`set, 
          Blank[]]] := Module[{$CellContext`st = Sort[$CellContext`set]}, 
         Delete[
          Append[$CellContext`st, 
           Part[$CellContext`st, 1]], 1]], $CellContext`primeForm[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Module[{$CellContext`t = $CellContext`fnOrder[$CellContext`s, 
            Length[$CellContext`s]]}, 
         $CellContext`transpose[$CellContext`t, -
          Part[$CellContext`t, 1]]], $CellContext`Invert[
         Pattern[$CellContext`ps, 
          Blank[]]] := Table[
         Abs[
         12 - Part[$CellContext`ps, $CellContext`i]], {$CellContext`i, 1, 
          Length[$CellContext`ps]}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.598312178807145*^9},
 CellID->1614037202]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell["\<\
The Forte-number is used to identify a set based on its prime form, and \
consists of the set's cardinal number, the number of elements in the set, and \
a number denoting its order in the listing created by Allen Forte. The \
interval vector represents the interval content of a set: it represents the \
number of times the 6 interval classes (ic's) occur in a set, where an \
interval class is given by the difference between any two elements in the \
pitch-class set. The first number in an ic corresponds to the number of times \
ic1 occurs, the second number ic2, and so forth. The transposition at level n \
of a set is produced when an integer n is added to each element of the set. \
Normal form and prime form give the most \"compact\" form of a set. A set is \
in normal form if it is in order and the differences between the first \
element and each of the proceeding elements is minimized. Prime form is the \
transposition of the normal form such that the first element of the set is 0. \
The inversion of set A is given by (12-a) mod 12 for each element a of A. \
Thus 0=0, 1=11, 2=10, etc.\
\>", "DetailNotes",
 CellChangeTimes->{{3.598139716545041*^9, 3.5981399921304483`*^9}, {
  3.598140038212921*^9, 3.5981401050677967`*^9}},
 CellID->1648748426],

Cell["\<\
Snapshot 1: any set of cardinality 12 has an \"uninteresting\" interval \
vector with 12 of each interval class except ic6, and a prime ordering which \
forms the chromatic scale\
\>", "DetailNotes",
 CellChangeTimes->{{3.597970590100099*^9, 3.59797059123608*^9}, {
   3.5979709086334257`*^9, 3.5979709122571793`*^9}, {3.598022928245576*^9, 
   3.598022959000688*^9}, {3.598023210442999*^9, 3.598023251590479*^9}, {
   3.598023305139245*^9, 3.5980233550329523`*^9}, {3.598027883056415*^9, 
   3.598027908370932*^9}, 3.5980279507945433`*^9, {3.5980280060055113`*^9, 
   3.598028006519155*^9}, 3.598139693296276*^9},
 CellID->2011198299],

Cell["\<\
Snapshot 2: set 7-35 is one of five sets which has unique interval vector \
entries; it is present in Busoni's Second Sonatina\
\>", "DetailNotes",
 CellChangeTimes->{{3.597970918589136*^9, 3.5979709218493958`*^9}, {
  3.598023363593215*^9, 3.598023371055847*^9}, {3.598023402808558*^9, 
  3.598023413200783*^9}, {3.598119802320301*^9, 3.598119835869636*^9}},
 CellID->1862654217],

Cell["\<\
Snapshot 3: set 4-19 is present in the \"Wir arme Leut\" motive in the opera \
Wozzeck by Austrian composer Alban Berg, and is one of the two sets of \
cardinality 4 with the maximum number of ic4\
\>", "DetailNotes",
 CellChangeTimes->{{3.597970918589136*^9, 3.597970923894907*^9}, {
   3.598023992549549*^9, 3.598024132825478*^9}, {3.598024168524527*^9, 
   3.5980241693169327`*^9}, {3.598027936581373*^9, 3.598027952474202*^9}, 
   3.5981405197959948`*^9},
 CellID->1662629808],

Cell["References:", "DetailNotes",
 CellChangeTimes->{{3.597970613384563*^9, 3.597970670801124*^9}, {
  3.598028277285781*^9, 3.598028277548418*^9}, {3.598120025957385*^9, 
  3.5981200280264997`*^9}},
 CellID->9268641],

Cell[TextData[{
 "A. Forte, ",
 StyleBox["The Structure of Atonal Music",
  FontSlant->"Italic"],
 ", New Haven: Yale University Press, 1973."
}], "DetailNotes",
 CellChangeTimes->{{3.597970613384563*^9, 3.597970670801124*^9}, {
  3.598028277285781*^9, 3.598028277548418*^9}, {3.598120025957385*^9, 
  3.598120028024909*^9}},
 CellID->274987741],

Cell[TextData[ButtonBox["J. Tomlin, \"All About Set Theory\".",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.jaytomlin.com/music/settheory/help.html"], None},
 ButtonNote->
  "http://www.jaytomlin.com/music/settheory/help.html"]], "RelatedLinks",
 CellChangeTimes->{{3.5979704470839443`*^9, 3.597970447603512*^9}, {
   3.597970481266605*^9, 3.597970516369226*^9}, {3.597970699547559*^9, 
   3.597970707070834*^9}, 3.597970932228272*^9, {3.598028285303808*^9, 
   3.598028285652265*^9}, {3.598120036031489*^9, 3.598120037647607*^9}},
 CellID->1332838257]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.59797013140257*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["atonal", "SearchTerms",
 CellChangeTimes->{{3.597970074175808*^9, 3.5979700747410393`*^9}},
 CellID->1722129079],

Cell["music", "SearchTerms",
 CellChangeTimes->{{3.597970089855381*^9, 3.597970093829701*^9}},
 CellID->1286838408],

Cell["pitch-class", "SearchTerms",
 CellChangeTimes->{{3.59797009680892*^9, 3.597970098013488*^9}, {
  3.597970142779962*^9, 3.5979701443632927`*^9}},
 CellID->1902656173],

Cell["set theory", "SearchTerms",
 CellChangeTimes->{{3.597970145941781*^9, 3.597970146898879*^9}, {
  3.597970215912524*^9, 3.597970216893281*^9}},
 CellID->959727449],

Cell["second viennese school", "SearchTerms",
 CellChangeTimes->{{3.5980280923685904`*^9, 3.598028094867094*^9}},
 CellID->2136569288],

Cell["music theory", "SearchTerms",
 CellChangeTimes->{{3.598028099167754*^9, 3.5980281004586897`*^9}},
 CellID->1245961929]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["The 29 Tetrachords and Other Set Classes (Wolfram \
Demonstrations Project)",
 BaseStyle->"Hyperlink",
 ButtonData->{
   FrontEnd`FileName[{
    " http:", "", "demonstrations.wolfram.com", 
     "The29TetrachordsAndOtherSetClasses"}, CharacterEncoding -> "UTF-8"], 
   None}]], "RelatedLinks",
 CellChangeTimes->{{3.598028133291725*^9, 3.598028185094076*^9}},
 CellID->769098806]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: Didi Park", "Author",
 CellChangeTimes->{{3.597969717888184*^9, 3.5979697215092897`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1307, 802},
WindowMargins->{{3, Automatic}, {Automatic, 12}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AutomaticAnimation"->{
  Cell[82763, 2063, 1464, 31, 29, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[84230, 2096, 908, 21, 29, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]},
 "CreateAndDeleteLocators"->{
  Cell[80904, 2012, 637, 15, 29, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "DragLocators"->{
  Cell[80561, 1999, 340, 11, 29, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "GamepadControls"->{
  Cell[82391, 2052, 369, 9, 29, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "ResizeImages"->{
  Cell[79525, 1970, 352, 9, 29, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[79880, 1981, 678, 16, 29, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "SliderZoom"->{
  Cell[81544, 2029, 844, 21, 29, "ControlSuggestions",
   CellTags->"SliderZoom"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AutomaticAnimation", 87119, 2188},
 {"BookmarkAnimation", 87236, 2191},
 {"CreateAndDeleteLocators", 87357, 2194},
 {"DragLocators", 87473, 2197},
 {"GamepadControls", 87581, 2200},
 {"ResizeImages", 87688, 2203},
 {"RotateAndZoomIn3D", 87797, 2206},
 {"SliderZoom", 87905, 2209}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 295, 4, 76, "DemoTitle"],
Cell[CellGroupData[{
Cell[899, 30, 33, 0, 275, "InitializationSection"],
Cell[935, 32, 11585, 356, 329, "Input",
 InitializationCell->True,
 CellID->1088626735]
}, Open  ]],
Cell[CellGroupData[{
Cell[12557, 393, 29, 0, 243, "ManipulateSection"],
Cell[12589, 395, 10800, 260, 438, "Input",
 CellID->1338191265]
}, Open  ]],
Cell[CellGroupData[{
Cell[23426, 660, 36, 0, 181, "ManipulateCaptionSection"],
Cell[23465, 662, 1934, 27, 71, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25436, 694, 28, 0, 179, "ThumbnailSection"],
Cell[25467, 696, 12476, 292, 499, "Output",
 CellID->594605143]
}, Open  ]],
Cell[CellGroupData[{
Cell[37980, 993, 28, 0, 149, "SnapshotsSection"],
Cell[38011, 995, 12486, 292, 498, "Output",
 CellID->599816725],
Cell[50500, 1289, 12470, 292, 498, "Output",
 CellID->639472970],
Cell[62973, 1583, 12461, 292, 499, "Output",
 CellID->1614037202]
}, Open  ]],
Cell[CellGroupData[{
Cell[75471, 1880, 26, 0, 357, "DetailsSection"],
Cell[75500, 1882, 1275, 19, 103, "DetailNotes",
 CellID->1648748426],
Cell[76778, 1903, 645, 11, 23, "DetailNotes",
 CellID->2011198299],
Cell[77426, 1916, 390, 7, 23, "DetailNotes",
 CellID->1862654217],
Cell[77819, 1925, 490, 9, 23, "DetailNotes",
 CellID->1662629808],
Cell[78312, 1936, 218, 4, 23, "DetailNotes",
 CellID->9268641],
Cell[78533, 1942, 345, 9, 23, "DetailNotes",
 CellID->274987741],
Cell[78881, 1953, 567, 10, 23, "RelatedLinks",
 CellID->1332838257]
}, Open  ]],
Cell[CellGroupData[{
Cell[79485, 1968, 37, 0, 131, "ControlSuggestionsSection"],
Cell[79525, 1970, 352, 9, 29, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[79880, 1981, 678, 16, 29, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[80561, 1999, 340, 11, 29, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[80904, 2012, 637, 15, 29, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[81544, 2029, 844, 21, 29, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[82391, 2052, 369, 9, 29, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[82763, 2063, 1464, 31, 29, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[84230, 2096, 908, 21, 29, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85175, 2122, 30, 0, 165, "SearchTermsSection"],
Cell[85208, 2124, 118, 2, 23, "SearchTerms",
 CellID->1722129079],
Cell[85329, 2128, 115, 2, 23, "SearchTerms",
 CellID->1286838408],
Cell[85447, 2132, 171, 3, 23, "SearchTerms",
 CellID->1902656173],
Cell[85621, 2137, 168, 3, 23, "SearchTerms",
 CellID->959727449],
Cell[85792, 2142, 134, 2, 23, "SearchTerms",
 CellID->2136569288],
Cell[85929, 2146, 124, 2, 23, "SearchTerms",
 CellID->1245961929]
}, Open  ]],
Cell[CellGroupData[{
Cell[86090, 2153, 31, 0, 149, "RelatedLinksSection"],
Cell[86124, 2155, 404, 9, 23, "RelatedLinks",
 CellID->769098806]
}, Open  ]],
Cell[CellGroupData[{
Cell[86565, 2169, 25, 0, 149, "AuthorSection"],
Cell[86593, 2171, 111, 1, 23, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
